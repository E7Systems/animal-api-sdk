var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/Animal.html",[0,0.016,1,0.346]],["body/interfaces/Animal.html",[0,0.03,1,0.634,2,0.199,3,0.199,4,0.133,5,0.388,6,0.746,7,0.133,8,0.382,9,1.449,10,0.645,11,0.753,12,0.715,13,0.356,14,0.033,15,0.853,16,1.148,17,0.528,18,0.889,19,0.291,20,0.97,21,0.784,22,1.148,23,1.056,24,0.477,25,0.81,26,0.477,27,0.347,28,1.056,29,0.746,30,1.334,31,0.55,32,0.81,33,1.148,34,0.81,35,0.883,36,0.581,37,0.639,38,1.056,39,0.676,40,1.056,41,0.81,42,0.784,43,0.81,44,0.685,45,1.333,46,1.148,47,0.81,48,0.97,49,1.148,50,1.148,51,1.148,52,0.81,53,0.743,54,0.492,55,0.477,56,0.621,57,0.81,58,0.746,59,1.148,60,0.81,61,0.81,62,0.81,63,1.333,64,0.81,65,0.611,66,0.81,67,1.148,68,0.849,69,1.148,70,1.53,71,1.503,72,1.449,73,1.148,74,0.81,75,0.71,76,0.81,77,0.81,78,0.388,79,1.449,80,0.544,81,0.55,82,0.81,83,0.81,84,1.148,85,0.81,86,0.81,87,1.148,88,0.97,89,0.81,90,0.81,91,0.81,92,0.676,93,0.388,94,0.628,95,0.477,96,0.388,97,0.81,98,0.81,99,0.388,100,0.477,101,0.477,102,0.02,103,0.02]],["title/interfaces/AnimalApiCredentials.html",[0,0.016,20,0.77]],["body/interfaces/AnimalApiCredentials.html",[0,0.031,1,0.552,2,0.2,3,0.2,4,0.134,5,0.391,6,0.75,7,0.134,8,0.384,9,0.815,10,0.605,11,0.716,12,0.715,13,0.328,14,0.033,15,0.787,16,0.815,17,0.524,18,0.89,19,0.291,20,1.13,21,0.902,22,1.453,23,1.337,24,0.855,25,1.152,26,0.855,27,0.349,28,1.06,29,0.75,30,1.337,31,0.552,32,0.815,33,1.152,34,0.815,35,0.883,36,0.582,37,0.641,38,1.06,39,0.678,40,1.06,41,0.815,42,0.787,43,0.815,44,0.689,45,1.337,46,1.152,47,0.815,48,0.974,49,1.152,50,1.152,51,1.152,52,0.815,53,0.746,54,0.494,55,0.48,56,0.623,57,0.815,58,0.75,59,1.152,60,0.815,61,0.815,62,0.815,63,1.337,64,0.815,65,0.614,66,0.815,67,1.152,68,0.85,69,1.152,70,1.533,71,1.505,72,1.453,73,1.152,74,0.815,75,0.712,76,0.815,77,0.815,78,0.391,79,1.453,80,0.545,81,0.552,82,0.815,83,0.815,84,1.152,85,0.815,86,0.815,87,1.152,88,0.974,89,0.815,90,0.815,91,0.815,92,0.678,93,0.391,94,0.632,95,0.48,96,0.391,97,0.815,98,0.815,99,0.391,100,0.48,101,0.48,102,0.02,103,0.02]],["title/classes/AnimalMenuItemService.html",[104,0.223,105,1.382]],["body/classes/AnimalMenuItemService.html",[1,0.624,2,0.174,3,0.174,4,0.116,5,0.339,7,0.116,8,0.347,10,0.657,11,0.529,12,0.576,13,0.372,14,0.033,15,0.727,17,0.499,18,0.773,19,0.257,21,0.923,24,0.417,26,0.417,27,0.446,31,0.592,35,0.652,36,0.643,37,0.339,39,0.613,42,0.947,54,0.446,55,0.854,56,0.303,65,0.773,68,0.652,75,0.377,78,0.499,80,0.347,81,0.499,92,0.854,93,0.339,95,0.417,96,0.339,99,0.752,100,0.854,101,0.854,102,0.018,103,0.018,104,0.385,105,1.873,106,1.074,107,2.599,108,2.474,109,1.45,110,2.244,111,2.086,112,1.909,113,2.086,114,1.58,115,3.381,116,1.789,117,1.578,118,2.113,119,1.578,120,1.578,121,1.892,122,1.578,123,2.021,124,1.456,125,1.892,126,1.173,127,1.798,128,1.892,129,1.578,130,1.744,131,2.241,132,1.892,133,1.578,134,1.074,135,0.986,136,2.667,137,2.184,138,2.637,139,2.009,140,1.896,141,1.72,142,1.286,143,1.074,144,1.173,145,1.286,146,0.835,147,0.907,148,0.835,149,1.286,150,1.647,151,0.986,152,1.511,153,1.173,154,1.286,155,1.892,156,1.892,157,2.637,158,1.286,159,1.286,160,1.286,161,2.244,162,2.244,163,1.286,164,1.286,165,1.286,166,1.286,167,1.286,168,1.286,169,0.907,170,1.286,171,1.72,172,0.986,173,1.286,174,1.892,175,1.286,176,1.286,177,1.58,178,1.286,179,1.286,180,2.514,181,1.286,182,1.286,183,1.286,184,1.58,185,1.286,186,1.892,187,1.286,188,2.244,189,1.58,190,1.72,191,1.286,192,1.286,193,1.286,194,1.286,195,1.286,196,1.286,197,1.286,198,1.286,199,1.074,200,1.286,201,1.286,202,1.286,203,1.286,204,1.286,205,1.286,206,1.58,207,1.286,208,1.286,209,1.286,210,1.892,211,0.986,212,1.286,213,1.286,214,1.173,215,1.286,216,1.286,217,1.286,218,1.286,219,1.286,220,1.286,221,1.286,222,2.757,223,1.286,224,1.286,225,1.286,226,1.286,227,1.286,228,1.286,229,1.286,230,1.286,231,1.286,232,1.286,233,1.892,234,1.286,235,1.286,236,1.286,237,1.286,238,1.286,239,1.286,240,1.286,241,1.286,242,1.286,243,1.286]],["title/classes/AnimalModelService.html",[104,0.223,107,1.382]],["body/classes/AnimalModelService.html",[1,0.622,2,0.172,3,0.172,4,0.115,5,0.768,7,0.115,8,0.344,10,0.655,11,0.58,12,0.609,13,0.383,14,0.033,15,0.721,17,0.498,18,0.769,19,0.256,21,0.944,24,0.411,26,0.411,27,0.442,31,0.588,35,0.649,36,0.655,37,0.335,39,0.607,42,0.944,54,0.442,55,0.796,56,0.3,65,0.769,68,0.649,75,0.372,78,0.494,80,0.344,81,0.494,92,0.849,93,0.335,95,0.411,96,0.335,99,0.749,100,0.849,101,0.849,102,0.018,103,0.018,104,0.383,105,1.565,106,1.061,107,2.292,108,2.46,109,1.437,110,2.228,111,2.068,112,1.905,113,2.068,114,1.86,116,1.842,118,2.233,121,1.875,123,2.104,124,1.596,125,1.875,126,1.159,127,1.795,128,1.875,130,1.734,131,2.233,132,1.875,134,1.061,135,0.974,136,2.657,137,2.176,138,2.623,139,2.001,140,1.885,141,1.708,142,1.271,143,1.061,144,1.159,145,1.271,146,0.824,147,0.896,148,0.824,149,1.271,150,1.64,151,0.974,152,1.506,153,1.159,154,1.875,155,2.46,156,1.875,157,2.623,158,1.271,159,1.271,160,1.271,161,2.228,162,2.228,163,1.271,164,1.271,165,1.271,166,1.271,167,1.271,168,1.271,169,0.896,170,1.271,171,1.708,172,0.974,173,1.271,174,1.875,175,1.271,176,1.271,177,1.565,178,1.271,179,1.271,180,2.503,181,1.271,182,1.271,183,1.271,184,1.565,185,1.271,186,1.875,187,1.271,188,2.228,189,1.565,190,1.708,191,1.271,192,1.271,193,1.271,194,1.271,195,1.271,196,1.271,197,1.271,198,1.271,199,1.061,200,1.271,201,1.271,202,1.271,203,1.271,204,1.271,205,1.271,206,1.565,207,1.271,208,1.271,209,1.271,210,1.875,211,0.974,212,1.271,213,1.271,214,1.159,215,1.271,216,1.271,217,1.271,218,1.271,219,1.271,220,1.271,221,1.271,222,2.745,223,1.271,224,1.271,225,1.271,226,1.271,227,1.271,228,1.271,229,1.271,230,1.271,231,1.271,232,1.271,233,1.875,234,1.271,235,1.271,236,1.271,237,1.271,238,1.271,239,1.271,240,1.271,241,1.271,242,1.271,243,1.271,244,1.558,245,1.271,246,3.567,247,2.417,248,2.417,249,2.417,250,2.417,251,2.417]],["title/classes/AnimalMonthService.html",[104,0.223,189,1.382]],["body/classes/AnimalMonthService.html",[1,0.625,2,0.164,3,0.164,4,0.109,5,0.634,7,0.109,8,0.332,10,0.649,11,0.606,12,0.564,13,0.388,14,0.033,15,0.905,17,0.502,18,0.753,19,0.252,21,0.905,24,0.392,26,0.392,27,0.427,31,0.571,35,0.634,36,0.634,37,0.319,39,0.701,42,0.983,54,0.427,55,0.833,56,0.286,65,0.79,68,0.634,75,0.355,78,0.477,80,0.332,81,0.477,92,0.873,93,0.319,95,0.392,96,0.319,99,0.775,100,0.873,101,0.873,102,0.017,103,0.017,104,0.377,105,1.511,106,1.011,107,2.567,108,2.403,109,1.387,110,2.166,111,1.995,112,1.937,113,1.995,114,1.511,115,3.308,116,1.906,117,1.485,118,2.067,119,1.485,120,1.485,121,1.809,122,1.485,123,2.142,124,1.668,125,1.809,126,1.105,127,1.813,128,1.809,129,1.485,130,1.693,131,2.292,132,1.809,133,1.485,134,1.511,135,1.387,136,2.727,137,2.202,138,2.697,139,2.025,140,1.841,141,1.66,142,1.211,143,1.011,144,1.105,145,1.211,146,0.786,147,0.854,148,0.786,149,1.211,150,1.612,151,0.928,152,1.487,153,1.105,154,1.211,155,1.809,156,1.809,157,2.571,158,1.211,159,1.211,160,1.211,161,2.166,162,2.166,163,1.211,164,1.211,165,1.211,166,1.211,167,1.211,168,1.211,169,0.854,170,1.211,171,1.66,172,0.928,173,1.211,174,1.809,175,1.211,176,1.211,177,1.511,178,1.211,179,1.211,180,2.46,181,1.211,182,1.211,183,1.211,184,1.511,185,1.211,186,1.809,187,1.211,188,2.166,189,1.808,190,1.971,191,1.809,192,2.166,193,1.211,194,1.211,195,1.211,196,1.211,197,1.211,198,1.211,199,1.011,200,1.211,201,1.211,202,1.809,203,1.809,204,1.211,205,1.211,206,1.511,207,1.211,208,1.211,209,1.211,210,1.809,211,0.928,212,1.211,213,1.211,214,1.105,215,1.211,216,1.211,217,1.211,218,1.211,219,1.211,220,1.211,221,1.211,222,2.697,223,1.211,224,1.211,225,1.211,226,1.211,227,1.211,228,1.211,229,1.211,230,1.211,231,1.211,232,1.211,233,1.809,234,1.211,235,1.211,236,1.211,237,1.211,238,1.211,239,1.211,240,1.211,241,1.211,242,1.211,243,1.211,252,4.571,253,3.442,254,3.442,255,2.304,256,2.304,257,2.304,258,2.304,259,2.304]],["title/classes/AnimalPageService.html",[104,0.223,184,1.382]],["body/classes/AnimalPageService.html",[1,0.62,2,0.17,3,0.17,4,0.113,5,0.49,7,0.113,8,0.341,10,0.654,11,0.577,12,0.571,13,0.382,14,0.033,15,0.717,17,0.497,18,0.765,19,0.255,21,0.916,24,0.407,26,0.407,27,0.438,31,0.584,35,0.645,36,0.64,37,0.331,39,0.602,42,0.94,54,0.438,55,0.845,56,0.296,65,0.765,68,0.645,75,0.368,78,0.49,80,0.341,81,0.49,92,0.885,93,0.331,95,0.407,96,0.331,99,0.782,100,0.885,101,0.885,102,0.017,103,0.017,104,0.382,105,1.552,106,1.049,107,2.586,108,2.446,109,1.425,110,2.213,111,2.05,112,1.927,113,2.05,114,1.552,115,3.352,116,1.835,117,1.541,118,2.095,119,1.541,120,1.541,121,1.859,122,1.541,123,2.095,124,1.587,125,1.859,126,1.146,127,1.8,128,1.859,129,1.541,130,1.724,131,2.273,132,1.859,133,1.541,134,1.552,135,1.425,136,2.705,137,2.226,138,2.734,139,2.047,140,1.875,141,1.696,142,1.256,143,1.049,144,1.146,145,1.256,146,0.815,147,0.885,148,0.815,149,1.256,150,1.633,151,0.963,152,1.501,153,1.146,154,1.256,155,1.859,156,1.859,157,2.611,158,1.256,159,1.256,160,1.256,161,2.213,162,2.213,163,1.256,164,1.256,165,1.256,166,1.256,167,1.256,168,1.256,169,0.885,170,1.256,171,1.696,172,0.963,173,1.256,174,1.859,175,1.256,176,1.256,177,1.552,178,1.256,179,1.256,180,2.493,181,1.256,182,1.256,183,1.256,184,1.848,185,1.859,186,1.859,187,1.256,188,2.213,189,1.552,190,1.696,191,1.256,192,1.256,193,1.256,194,1.256,195,1.256,196,1.256,197,1.256,198,1.256,199,1.049,200,1.256,201,1.256,202,1.256,203,1.256,204,1.256,205,1.256,206,1.552,207,1.256,208,1.256,209,1.256,210,1.859,211,0.963,212,1.256,213,1.256,214,1.146,215,1.256,216,1.256,217,1.256,218,1.256,219,1.256,220,1.256,221,1.256,222,2.734,223,1.256,224,1.256,225,1.256,226,1.256,227,1.256,228,1.256,229,1.256,230,1.256,231,1.256,232,1.256,233,1.859,234,1.256,235,1.256,236,1.256,237,1.256,238,1.256,239,1.256,240,1.256,241,1.256,242,1.256,243,1.256,260,3.537,261,2.39]],["title/classes/AnimalQuestionService.html",[104,0.223,206,1.382]],["body/classes/AnimalQuestionService.html",[1,0.617,2,0.167,3,0.167,4,0.112,5,0.579,7,0.112,8,0.337,10,0.652,11,0.612,12,0.568,13,0.391,14,0.033,15,0.711,17,0.495,18,0.76,19,0.254,21,0.912,24,0.401,26,0.401,27,0.434,31,0.579,35,0.641,36,0.638,37,0.327,39,0.596,42,0.937,54,0.434,55,0.84,56,0.292,65,0.76,68,0.684,71,0.931,75,0.363,78,0.641,80,0.337,81,0.485,92,0.881,93,0.327,95,0.401,96,0.327,99,0.779,100,0.881,101,0.881,102,0.017,103,0.017,104,0.38,105,1.536,106,1.034,107,2.579,108,2.429,109,1.41,110,2.194,111,2.028,112,1.943,113,2.028,114,1.536,115,3.335,116,1.877,117,1.519,118,2.084,119,1.519,120,1.519,121,1.839,122,1.519,123,2.158,124,1.684,125,1.839,126,1.129,127,1.804,128,1.839,129,1.519,130,1.712,131,2.265,132,1.839,133,1.519,134,1.536,135,1.41,136,2.695,137,2.217,138,2.719,139,2.039,140,1.862,141,1.682,142,1.238,143,1.034,144,1.129,145,1.238,146,0.803,147,0.873,148,0.803,149,1.238,150,1.625,151,0.949,152,1.496,153,1.129,154,1.238,155,1.839,156,1.839,157,2.595,158,1.238,159,1.238,160,1.238,161,2.194,162,2.194,163,1.238,164,1.238,165,1.238,166,1.238,167,1.238,168,1.238,169,0.873,170,1.238,171,1.682,172,0.949,173,1.238,174,1.839,175,1.238,176,1.238,177,1.536,178,1.238,179,1.238,180,2.48,181,1.238,182,1.238,183,1.238,184,1.536,185,1.238,186,1.839,187,1.238,188,2.194,189,1.536,190,1.682,191,1.238,192,1.238,193,1.238,194,1.238,195,1.238,196,1.238,197,1.238,198,1.238,199,1.034,200,1.238,201,1.238,202,1.238,203,1.238,204,1.238,205,1.238,206,1.832,207,1.839,208,1.238,209,1.839,210,1.839,211,0.949,212,1.238,213,1.238,214,1.129,215,1.238,216,1.238,217,1.238,218,1.238,219,1.238,220,1.238,221,1.238,222,2.719,223,1.238,224,1.238,225,1.238,226,1.238,227,1.238,228,1.238,229,1.238,230,1.238,231,1.238,232,1.238,233,1.839,234,1.238,235,1.238,236,1.238,237,1.238,238,1.238,239,1.238,240,1.238,241,1.238,242,1.238,243,1.238,262,3.499,263,2.356,264,2.356]],["title/modules/AnimalSDKModule.html",[265,1.825,266,2.03]],["body/modules/AnimalSDKModule.html",[1,0.648,2,0.299,3,0.299,4,0.2,14,0.033,19,0.3,27,0.645,102,0.026,103,0.026,104,0.299,127,1.219,140,2.565,143,1.85,144,2.495,151,2.097,211,2.097,214,2.021,265,2.444,266,3.64,267,4.217,268,4.714,269,5.206,270,5.206,271,4.217,272,5.206,273,5.647,274,5.206,275,5.647,276,5.206,277,5.647,278,5.206,279,5.206,280,5.206,281,3.061,282,2.444,283,4.217,284,4.099,285,4.217]],["title/injectables/AnimalSDKService.html",[141,1.268,211,1.268]],["body/injectables/AnimalSDKService.html",[1,0.657,2,0.174,3,0.174,4,0.116,5,0.801,7,0.116,8,0.347,10,0.643,11,0.447,12,0.469,13,0.395,14,0.033,15,0.727,17,0.474,18,0.726,19,0.257,21,0.923,24,0.417,26,0.417,27,0.584,31,0.592,35,0.752,36,0.576,37,0.34,39,0.417,42,0.997,54,0.447,55,0.802,56,0.304,65,0.726,68,0.752,75,0.378,78,0.5,80,0.347,81,0.696,92,0.802,93,0.34,95,0.417,96,0.34,99,0.696,100,0.802,101,0.802,102,0.018,103,0.018,104,0.372,105,2.067,106,1.076,107,2.203,108,1.289,109,1.452,110,1.289,112,1.969,116,1.937,118,2.114,121,1.289,123,1.722,124,1.229,125,1.289,127,1.79,128,1.289,130,1.335,131,2.186,132,1.289,136,2.601,137,2.114,138,2.476,139,1.944,140,1.898,141,1.898,142,1.289,143,1.076,144,1.175,145,1.289,146,0.836,147,0.908,148,0.836,149,1.289,150,1.648,151,0.988,152,1.511,153,1.175,154,1.289,155,1.894,156,1.894,157,2.638,158,1.289,159,1.289,160,1.289,161,2.246,162,2.246,163,1.289,164,1.289,165,1.289,166,1.289,167,1.289,168,1.289,169,0.908,170,1.289,171,1.722,172,0.988,173,1.289,174,1.894,175,1.289,176,1.289,177,1.581,178,1.289,179,1.289,180,2.516,181,1.289,182,1.289,183,1.289,184,2.067,185,1.289,186,1.894,187,1.289,188,2.246,189,2.067,190,2.022,191,1.289,192,1.289,193,1.289,194,1.289,195,1.289,196,1.289,197,1.289,198,1.289,199,1.076,200,1.289,201,1.289,202,1.289,203,1.289,204,1.289,205,1.289,206,2.067,207,1.289,208,1.289,209,1.289,210,1.894,211,1.452,212,2.476,213,1.289,214,1.727,215,1.289,216,1.289,217,1.289,218,1.289,219,1.289,220,1.289,221,1.289,222,2.759,223,1.289,224,1.289,225,1.289,226,1.289,227,1.289,228,1.289,229,1.289,230,1.894,231,1.894,232,1.289,233,1.894,234,1.289,235,2.476,236,1.289,237,1.289,238,1.289,239,1.289,240,1.289,241,1.289,242,1.289,243,1.289,244,1.58,245,1.289,286,3.604,287,2.452,288,3.604,289,2.452,290,2.452,291,2.452,292,2.452,293,2.452,294,2.452,295,2.452]],["title/interfaces/AnimalSdkConfig.html",[0,0.016,27,0.39]],["body/interfaces/AnimalSdkConfig.html",[0,0.031,1,0.551,2,0.2,3,0.2,4,0.133,5,0.39,6,0.748,7,0.133,8,0.383,9,0.813,10,0.604,11,0.716,12,0.713,13,0.328,14,0.033,15,0.786,16,0.813,17,0.524,18,0.871,19,0.291,20,1.227,21,0.855,22,1.151,23,1.059,24,0.479,25,0.813,26,0.479,27,0.493,28,1.463,29,1.059,30,1.463,31,0.696,32,1.151,33,1.591,34,1.151,35,0.883,36,0.582,37,0.64,38,1.059,39,0.677,40,1.059,41,0.813,42,0.786,43,0.813,44,0.688,45,1.335,46,1.151,47,0.813,48,0.973,49,1.151,50,1.151,51,1.151,52,0.813,53,0.745,54,0.493,55,0.479,56,0.622,57,0.813,58,0.748,59,1.151,60,0.813,61,0.813,62,0.813,63,1.335,64,0.813,65,0.613,66,0.813,67,1.151,68,0.85,69,1.151,70,1.532,71,1.505,72,1.452,73,1.151,74,0.813,75,0.711,76,0.813,77,0.813,78,0.39,79,1.452,80,0.545,81,0.552,82,0.813,83,0.813,84,1.151,85,0.813,86,0.813,87,1.151,88,0.973,89,0.813,90,0.813,91,0.813,92,0.677,93,0.39,94,0.631,95,0.479,96,0.39,97,0.813,98,0.813,99,0.39,100,0.479,101,0.479,102,0.02,103,0.02]],["title/classes/ApiStorage.html",[104,0.223,146,1.074]],["body/classes/ApiStorage.html",[0,0.019,2,0.28,3,0.28,4,0.187,7,0.187,10,0.633,11,0.714,12,0.71,13,0.409,14,0.033,17,0.48,19,0.273,36,0.549,53,1.112,54,0.619,56,0.489,80,0.38,94,0.885,102,0.025,103,0.025,104,0.389,109,2.012,112,1.809,116,1.964,123,2.32,124,1.964,127,1.755,130,2.03,139,1.462,146,1.703,147,1.85,148,2.07,150,1.569,152,1.05,169,2.03,171,2.012,172,1.59,245,2.625,282,3.718,296,3.444,297,2.288,298,4.995,299,4.995,300,4.995,301,3.625,302,3.947,303,3.625,304,3.947,305,3.625,306,3.947,307,3.625,308,3.947,309,2.865,310,2.544,311,2.544,312,2.865,313,2.865,314,2.865,315,2.865,316,2.865,317,2.865,318,2.865,319,2.865]],["title/interfaces/AskQuestion.html",[0,0.016,78,0.436]],["body/interfaces/AskQuestion.html",[0,0.03,1,0.55,2,0.198,3,0.198,4,0.132,5,0.387,6,0.743,7,0.132,8,0.381,9,0.807,10,0.603,11,0.753,12,0.717,13,0.355,14,0.033,15,0.783,16,0.807,17,0.523,18,0.869,19,0.29,20,0.968,21,0.783,22,1.145,23,1.053,24,0.475,25,0.807,26,0.475,27,0.346,28,1.053,29,0.743,30,1.331,31,0.549,32,0.807,33,1.145,34,0.807,35,0.882,36,0.58,37,0.637,38,1.053,39,0.674,40,1.053,41,0.807,42,0.783,43,0.807,44,0.682,45,1.33,46,1.145,47,0.807,48,0.968,49,1.145,50,1.145,51,1.145,52,0.807,53,0.741,54,0.49,55,0.475,56,0.62,57,0.807,58,0.743,59,1.145,60,0.807,61,0.807,62,0.807,63,1.33,64,0.807,65,0.61,66,0.807,67,1.145,68,0.865,69,1.33,70,1.632,71,1.582,72,1.667,73,1.528,74,0.807,75,0.708,76,0.807,77,0.807,78,0.549,79,1.447,80,0.544,81,0.549,82,0.807,83,0.807,84,1.145,85,0.807,86,0.807,87,1.145,88,0.968,89,0.807,90,0.807,91,0.807,92,0.674,93,0.387,94,0.626,95,0.475,96,0.387,97,0.807,98,0.807,99,0.387,100,0.475,101,0.475,102,0.02,103,0.02]],["title/interfaces/BasicMonth.html",[0,0.016,96,0.436]],["body/interfaces/BasicMonth.html",[0,0.031,1,0.553,2,0.201,3,0.201,4,0.134,5,0.392,6,0.752,7,0.134,8,0.385,9,0.817,10,0.605,11,0.717,12,0.711,13,0.329,14,0.033,15,0.788,16,0.817,17,0.535,18,0.872,19,0.291,20,0.976,21,0.788,22,1.155,23,1.062,24,0.481,25,0.817,26,0.481,27,0.35,28,1.062,29,0.752,30,1.339,31,0.553,32,0.817,33,1.155,34,0.817,35,0.892,36,0.583,37,0.736,38,1.062,39,0.68,40,1.062,41,0.817,42,0.856,43,0.817,44,0.691,45,1.339,46,1.155,47,0.817,48,0.976,49,1.155,50,1.155,51,1.155,52,0.817,53,0.748,54,0.495,55,0.481,56,0.623,57,0.817,58,0.752,59,1.155,60,0.817,61,0.817,62,0.817,63,1.455,64,0.817,65,0.615,66,0.817,67,1.155,68,0.851,69,1.155,70,1.535,71,1.507,72,1.455,73,1.155,74,0.817,75,0.713,76,0.817,77,0.817,78,0.392,79,1.455,80,0.546,81,0.553,82,0.817,83,0.817,84,1.155,85,0.817,86,0.817,87,1.155,88,0.976,89,0.817,90,0.817,91,0.817,92,0.68,93,0.392,94,0.634,95,0.481,96,0.553,97,1.155,98,0.817,99,0.392,100,0.481,101,0.481,102,0.02,103,0.02]],["title/interfaces/BasicPage.html",[0,0.016,37,0.436]],["body/interfaces/BasicPage.html",[0,0.03,1,0.539,2,0.19,3,0.19,4,0.127,5,0.371,6,0.711,7,0.127,8,0.37,9,0.773,10,0.638,11,0.706,12,0.719,13,0.418,14,0.033,15,0.764,16,0.773,17,0.525,18,0.878,19,0.288,20,0.938,21,0.764,22,1.11,23,1.021,24,0.455,25,0.773,26,0.455,27,0.331,28,1.021,29,0.711,30,1.305,31,0.532,32,0.773,33,1.11,34,0.773,35,0.895,36,0.571,37,0.68,38,1.439,39,0.921,40,1.439,41,1.11,42,0.835,43,1.419,44,0.938,45,1.419,46,1.298,47,1.419,48,1.199,49,1.419,50,1.298,51,1.502,52,1.11,53,0.841,54,0.644,55,0.455,56,0.608,57,0.773,58,0.711,59,1.11,60,0.773,61,0.773,62,0.773,63,1.298,64,0.773,65,0.591,66,0.773,67,1.11,68,0.843,69,1.11,70,1.502,71,1.482,72,1.419,73,1.11,74,0.773,75,0.691,76,0.773,77,0.773,78,0.371,79,1.419,80,0.537,81,0.532,82,0.773,83,0.773,84,1.11,85,0.773,86,0.773,87,1.11,88,0.938,89,0.773,90,0.773,91,0.773,92,0.653,93,0.371,94,0.599,95,0.455,96,0.371,97,0.773,98,0.773,99,0.371,100,0.455,101,0.455,102,0.019,103,0.019]],["title/interfaces/MenuItem.html",[0,0.016,81,0.436]],["body/interfaces/MenuItem.html",[0,0.03,1,0.547,2,0.196,3,0.196,4,0.131,5,0.383,6,0.735,7,0.131,8,0.379,9,0.799,10,0.643,11,0.751,12,0.712,13,0.373,14,0.033,15,0.778,16,0.799,17,0.533,18,0.901,19,0.29,20,0.961,21,0.778,22,1.136,23,1.045,24,0.47,25,0.799,26,0.47,27,0.342,28,1.045,29,0.735,30,1.325,31,0.545,32,0.799,33,1.136,34,0.799,35,0.884,36,0.578,37,0.634,38,1.045,39,0.669,40,1.045,41,0.799,42,0.778,43,0.799,44,0.675,45,1.322,46,1.136,47,0.799,48,0.961,49,1.136,50,1.136,51,1.136,52,0.799,53,0.736,54,0.487,55,0.47,56,0.617,57,0.799,58,0.735,59,1.136,60,0.799,61,0.799,62,0.799,63,1.322,64,0.799,65,0.605,66,0.799,67,1.136,68,0.847,69,1.136,70,1.522,71,1.497,72,1.44,73,1.136,74,0.799,75,0.704,76,0.799,77,0.799,78,0.383,79,1.627,80,0.572,81,0.69,82,1.136,83,1.44,84,1.581,85,1.136,86,1.136,87,1.136,88,0.961,89,0.799,90,0.799,91,0.799,92,0.669,93,0.383,94,0.62,95,0.47,96,0.383,97,0.799,98,0.799,99,0.383,100,0.47,101,0.47,102,0.019,103,0.019]],["title/interfaces/Page.html",[0,0.016,35,0.436]],["body/interfaces/Page.html",[0,0.03,1,0.548,2,0.197,3,0.197,4,0.132,5,0.384,6,0.738,7,0.132,8,0.38,9,0.802,10,0.601,11,0.713,12,0.716,13,0.354,14,0.033,15,0.78,16,0.802,17,0.523,18,0.867,19,0.29,20,0.963,21,0.78,22,1.139,23,1.048,24,0.472,25,0.802,26,0.472,27,0.344,28,1.048,29,0.738,30,1.327,31,0.546,32,0.802,33,1.139,34,0.802,35,0.891,36,0.579,37,0.692,38,1.048,39,0.671,40,1.048,41,0.802,42,0.78,43,0.802,44,0.678,45,1.325,46,1.325,47,0.802,48,0.963,49,1.139,50,1.139,51,1.139,52,0.802,53,0.738,54,0.488,55,0.671,56,0.713,57,1.139,58,1.048,59,1.443,60,1.139,61,1.443,62,1.139,63,1.443,64,1.443,65,0.607,66,0.802,67,1.139,68,0.848,69,1.139,70,1.524,71,1.498,72,1.443,73,1.139,74,0.802,75,0.706,76,0.802,77,0.802,78,0.384,79,1.443,80,0.543,81,0.546,82,0.802,83,0.802,84,1.139,85,0.802,86,0.802,87,1.139,88,0.963,89,0.802,90,0.802,91,0.802,92,0.671,93,0.384,94,0.622,95,0.472,96,0.384,97,0.802,98,0.802,99,0.384,100,0.472,101,0.472,102,0.019,103,0.019,124,1.702]],["title/interfaces/PageImage.html",[0,0.016,48,0.77]],["body/interfaces/PageImage.html",[0,0.03,1,0.551,2,0.199,3,0.199,4,0.133,5,0.389,6,0.746,7,0.133,8,0.383,9,0.811,10,0.645,11,0.715,12,0.715,13,0.356,14,0.033,15,0.785,16,0.811,17,0.528,18,0.889,19,0.291,20,0.971,21,0.785,22,1.148,23,1.057,24,0.477,25,0.811,26,0.477,27,0.348,28,1.057,29,0.746,30,1.334,31,0.551,32,0.811,33,1.148,34,0.811,35,0.883,36,0.581,37,0.639,38,1.057,39,0.676,40,1.057,41,0.811,42,0.785,43,0.811,44,0.686,45,1.53,46,1.148,47,0.811,48,1.127,49,1.148,50,1.148,51,1.148,52,0.811,53,0.744,54,0.492,55,0.477,56,0.621,57,0.811,58,0.746,59,1.148,60,0.811,61,0.811,62,0.811,63,1.333,64,0.811,65,0.846,66,1.148,67,1.589,68,0.85,69,1.148,70,1.53,71,1.503,72,1.45,73,1.148,74,0.811,75,0.71,76,0.811,77,0.811,78,0.389,79,1.45,80,0.544,81,0.551,82,0.811,83,0.811,84,1.148,85,0.811,86,0.811,87,1.148,88,0.971,89,0.811,90,0.811,91,0.811,92,0.676,93,0.389,94,0.629,95,0.477,96,0.389,97,0.811,98,0.811,99,0.389,100,0.477,101,0.477,102,0.02,103,0.02]],["title/interfaces/PagingInfo.html",[0,0.016,93,0.436]],["body/interfaces/PagingInfo.html",[0,0.031,1,0.552,2,0.2,3,0.2,4,0.134,5,0.391,6,0.751,7,0.134,8,0.384,9,0.817,10,0.605,11,0.716,12,0.711,13,0.328,14,0.033,15,0.788,16,0.817,17,0.524,18,0.872,19,0.291,20,0.976,21,0.788,22,1.154,23,1.062,24,0.481,25,0.817,26,0.481,27,0.35,28,1.062,29,0.751,30,1.412,31,0.553,32,0.817,33,1.154,34,0.817,35,0.888,36,0.583,37,0.641,38,1.062,39,0.679,40,1.062,41,0.817,42,0.788,43,0.817,44,0.69,45,1.338,46,1.154,47,0.817,48,0.976,49,1.154,50,1.154,51,1.154,52,0.817,53,0.747,54,0.494,55,0.481,56,0.623,57,0.817,58,0.751,59,1.154,60,0.817,61,0.817,62,0.817,63,1.454,64,0.817,65,0.615,66,0.817,67,1.154,68,0.85,69,1.154,70,1.534,71,1.506,72,1.454,73,1.154,74,0.817,75,0.713,76,0.817,77,0.817,78,0.391,79,1.454,80,0.581,81,0.553,82,0.817,83,0.817,84,1.154,85,0.817,86,0.817,87,1.338,88,1.23,89,0.817,90,0.817,91,0.817,92,0.679,93,0.553,94,1.038,95,0.856,96,0.391,97,0.817,98,0.817,99,0.391,100,0.481,101,0.481,102,0.02,103,0.02]],["title/interfaces/PagingMeta.html",[0,0.016,88,0.77]],["body/interfaces/PagingMeta.html",[0,0.03,1,0.551,2,0.199,3,0.199,4,0.133,5,0.39,6,0.748,7,0.133,8,0.383,9,0.813,10,0.604,11,0.716,12,0.711,13,0.328,14,0.033,15,0.786,16,0.813,17,0.534,18,0.871,19,0.291,20,0.972,21,0.786,22,1.15,23,1.058,24,0.478,25,0.813,26,0.478,27,0.348,28,1.058,29,0.748,30,1.409,31,0.551,32,0.813,33,1.15,34,0.813,35,0.888,36,0.604,37,0.64,38,1.058,39,0.786,40,1.058,41,0.813,42,0.786,43,0.813,44,0.687,45,1.335,46,1.15,47,0.813,48,0.972,49,1.15,50,1.15,51,1.15,52,0.813,53,0.745,54,0.493,55,0.478,56,0.622,57,0.813,58,0.748,59,1.15,60,0.813,61,0.813,62,0.813,63,1.335,64,0.813,65,0.613,66,0.813,67,1.15,68,0.85,69,1.15,70,1.532,71,1.504,72,1.451,73,1.15,74,0.813,75,0.711,76,0.813,77,0.813,78,0.39,79,1.451,80,0.556,81,0.551,82,0.813,83,0.813,84,1.15,85,0.813,86,0.813,87,1.335,88,1.128,89,1.15,90,1.451,91,1.15,92,0.901,93,0.39,94,0.63,95,0.478,96,0.39,97,0.813,98,0.813,99,0.39,100,0.478,101,0.478,102,0.02,103,0.02]],["title/interfaces/Question.html",[0,0.016,68,0.436]],["body/interfaces/Question.html",[0,0.03,1,0.536,2,0.187,3,0.187,4,0.125,5,0.366,6,0.703,7,0.125,8,0.367,9,0.764,10,0.645,11,0.745,12,0.72,13,0.417,14,0.033,15,0.88,16,0.764,17,0.528,18,0.875,19,0.288,20,0.93,21,0.759,22,1.1,23,1.012,24,0.45,25,0.764,26,0.45,27,0.327,28,1.012,29,0.703,30,1.298,31,0.527,32,0.764,33,1.1,34,0.764,35,0.877,36,0.568,37,0.618,38,1.012,39,0.648,40,1.012,41,0.764,42,0.759,43,0.764,44,0.646,45,1.29,46,1.1,47,0.764,48,0.93,49,1.1,50,1.29,51,1.496,52,0.764,53,0.835,54,0.641,55,0.45,56,0.704,57,0.764,58,0.703,59,1.1,60,0.764,61,0.764,62,0.764,63,1.29,64,0.764,65,0.586,66,0.764,67,1.1,68,0.88,69,1.29,70,1.643,71,1.583,72,1.643,73,1.496,74,1.1,75,0.875,76,1.1,77,1.411,78,0.366,79,1.411,80,0.535,81,0.527,82,0.764,83,0.764,84,1.1,85,0.764,86,0.764,87,1.1,88,0.93,89,0.764,90,0.764,91,0.764,92,0.648,93,0.366,94,0.592,95,0.45,96,0.366,97,0.764,98,0.764,99,0.366,100,0.45,101,0.45,102,0.019,103,0.019]],["title/classes/Queue.html",[104,0.223,320,1.825]],["body/classes/Queue.html",[2,0.255,3,0.255,4,0.17,7,0.17,8,0.453,11,0.582,13,0.42,14,0.033,17,0.537,19,0.223,44,1.149,80,0.453,102,0.023,103,0.023,104,0.372,109,1.894,112,1.646,114,1.576,116,2.086,123,1.894,124,1.603,126,1.722,127,1.712,131,2.239,134,2.299,135,2.239,137,1.447,150,1.646,152,1.394,177,1.576,190,2.111,199,2.063,244,2.315,245,2.754,320,2.725,321,2.607,322,4.64,323,4.64,324,4.64,325,4.941,326,4.64,327,4.701,328,4.64,329,3.924,330,4.64,331,4.701,332,3.592,333,4.035,334,3.592,335,3.592,336,3.592,337,3.924,338,3.592,339,4.64,340,3.592,341,3.924,342,2.315,343,3.924,344,3.924,345,2.998,346,3.924,347,3.924,348,3.924,349,2.998,350,2.998,351,2.998,352,2.998,353,2.998,354,2.998,355,2.607,356,4.64,357,2.998,358,3.412,359,2.998,360,2.998,361,4.64,362,2.998,363,2.998,364,2.998,365,2.998,366,3.924,367,2.998,368,2.998,369,2.607]],["title/classes/QueueEntry.html",[104,0.223,342,2.03]],["body/classes/QueueEntry.html",[2,0.281,3,0.281,4,0.188,7,0.188,8,0.482,13,0.389,14,0.033,17,0.481,19,0.237,44,0.967,80,0.482,102,0.025,103,0.025,104,0.389,112,1.243,114,2.665,116,1.871,127,1.667,131,2.21,135,1.594,137,1.594,150,1.723,152,1.331,177,1.737,190,1.594,199,2.195,245,2.63,320,2.294,321,2.872,322,3.303,323,3.303,324,3.303,325,4.176,326,3.303,328,3.303,329,3.303,330,4.176,333,3.632,337,3.303,339,5.069,341,3.303,342,3.225,343,4.963,344,4.963,345,3.303,346,4.176,347,4.176,348,4.176,349,3.303,350,3.303,351,3.303,352,3.303,353,3.303,354,3.303,355,2.872,356,4.812,357,3.303,358,3.632,359,3.303,360,3.303,361,4.812,362,3.303,363,3.303,364,3.303,365,3.303,366,4.176,367,3.303,368,3.303,369,2.872,370,3.957,371,3.957,372,3.957]],["title/classes/RailsApiClient.html",[104,0.223,118,1.268]],["body/classes/RailsApiClient.html",[2,0.177,3,0.177,4,0.118,7,0.118,8,0.352,10,0.614,11,0.676,12,0.715,13,0.422,14,0.033,17,0.441,19,0.118,28,1.405,31,0.832,36,0.555,40,0.664,65,0.665,75,0.384,102,0.018,103,0.018,104,0.259,109,2.198,112,1.987,114,1.602,116,2.028,118,1.471,123,2.198,124,1.861,126,1.196,127,1.817,130,1.352,131,1.471,134,2.085,135,2.253,136,2.615,139,2.287,140,1.005,150,1.757,152,0.971,169,0.924,180,1.196,190,2.128,244,1.608,245,2.269,282,3.061,320,3.061,355,2.65,358,2.65,369,2.65,373,5.011,374,2.083,375,4.751,376,4.751,377,3.651,378,3.651,379,3.651,380,5.455,381,3.651,382,3.651,383,3.651,384,3.651,385,2.495,386,2.495,387,2.495,388,2.495,389,3.651,390,2.495,391,3.651,392,2.495,393,3.651,394,4.317,395,2.495,396,3.651,397,2.495,398,2.495,399,3.651,400,3.651,401,2.495,402,3.651,403,3.651,404,2.495,405,5.056,406,3.651,407,3.651,408,2.495,409,5.056,410,4.751,411,2.495,412,3.651,413,3.651,414,2.495,415,3.651,416,3.651,417,5.594,418,4.317,419,4.317,420,3.651,421,2.495,422,2.495,423,2.495,424,2.495,425,3.651,426,3.651,427,2.495,428,2.495,429,2.495,430,2.495,431,2.495,432,2.495,433,2.495,434,2.495,435,2.495,436,2.495,437,4.317,438,5.056,439,3.651,440,3.651,441,2.495,442,4.317,443,2.495,444,2.495,445,2.495,446,2.495,447,2.495,448,2.495,449,2.495,450,2.495,451,2.495,452,2.495,453,2.495,454,2.495,455,2.495,456,2.495,457,2.495,458,3.651,459,2.495,460,2.495]],["title/classes/StorageItem.html",[104,0.223,148,1.074]],["body/classes/StorageItem.html",[0,0.021,2,0.301,3,0.301,4,0.201,7,0.201,8,0.503,10,0.574,12,0.7,13,0.402,14,0.033,17,0.436,19,0.28,36,0.466,53,0.978,54,0.752,56,0.732,80,0.569,94,1.27,102,0.026,103,0.026,104,0.402,112,1.856,116,1.931,127,1.511,130,1.571,139,1.571,146,1.446,147,2.189,148,2.015,150,1.641,152,1.128,169,1.571,171,2.104,172,1.708,282,3.425,296,3.425,297,2.458,301,3.078,303,3.078,305,3.078,307,3.078,309,3.078,310,2.734,311,2.734,312,3.078,313,3.078,314,3.078,315,3.078,316,3.078,317,3.078,318,3.078,319,3.078,461,4.241,462,4.241,463,4.241]],["title/interfaces/Updatable.html",[0,0.016,53,0.59]],["body/interfaces/Updatable.html",[0,0.026,2,0.305,3,0.305,4,0.204,7,0.204,8,0.507,10,0.669,12,0.709,13,0.404,14,0.033,17,0.495,19,0.282,36,0.652,53,1.066,54,0.755,56,0.532,80,0.414,94,0.963,102,0.026,103,0.026,104,0.374,112,1.864,127,1.523,130,1.592,139,1.592,146,1.465,147,1.951,148,1.942,150,1.654,152,1.143,169,1.592,171,2.121,172,1.731,282,3.441,296,2.49,297,2.49,301,3.119,303,3.119,305,3.119,307,3.119,309,3.119,310,2.769,311,2.769,312,3.119,313,3.119,314,3.119,315,3.119,316,3.119,317,3.119,318,3.119,319,3.119]],["title/interfaces/UrlParams.html",[0,0.016,99,0.436]],["body/interfaces/UrlParams.html",[0,0.03,1,0.551,2,0.199,3,0.199,4,0.133,5,0.389,6,0.746,7,0.133,8,0.383,9,0.811,10,0.604,11,0.715,12,0.713,13,0.356,14,0.033,15,0.785,16,0.811,17,0.531,18,0.87,19,0.291,20,0.971,21,0.785,22,1.148,23,1.057,24,0.477,25,0.811,26,0.477,27,0.348,28,1.057,29,0.746,30,1.334,31,0.551,32,0.811,33,1.148,34,0.811,35,0.883,36,0.581,37,0.639,38,1.057,39,0.676,40,1.057,41,0.811,42,0.785,43,0.811,44,0.686,45,1.333,46,1.148,47,0.811,48,0.971,49,1.148,50,1.148,51,1.148,52,0.811,53,0.744,54,0.492,55,0.477,56,0.621,57,0.811,58,0.746,59,1.148,60,0.811,61,0.811,62,0.811,63,1.333,64,0.811,65,0.612,66,0.811,67,1.148,68,0.85,69,1.148,70,1.53,71,1.503,72,1.45,73,1.148,74,0.811,75,0.71,76,0.811,77,0.811,78,0.389,79,1.45,80,0.544,81,0.551,82,0.811,83,0.811,84,1.148,85,0.811,86,0.811,87,1.148,88,0.971,89,0.811,90,0.811,91,0.811,92,0.901,93,0.389,94,0.629,95,0.477,96,0.389,97,0.811,98,0.811,99,0.551,100,0.853,101,0.853,102,0.02,103,0.02,124,1.874]],["title/coverage.html",[464,3.593]],["body/coverage.html",[0,0.032,1,0.427,4,0.184,5,0.909,6,1.71,13,0.276,14,0.033,18,0.598,20,0.95,27,0.481,31,0.538,35,0.538,37,0.538,48,0.95,53,0.727,68,0.538,78,0.538,81,0.538,88,0.95,93,0.538,96,0.538,99,0.538,102,0.024,103,0.024,104,0.449,105,1.705,106,2.695,107,1.705,118,1.565,141,1.565,146,1.325,148,1.325,151,1.565,152,1.033,184,1.705,189,1.705,206,1.705,211,1.565,296,3.153,297,3.153,320,2.252,321,3.589,333,4.513,342,2.504,373,3.242,374,3.242,464,3.242,465,3.884,466,3.884,467,5.726,468,5.726,469,5.726,470,5.726,471,3.884,472,3.884,473,3.884,474,3.884,475,3.884,476,3.884,477,3.884,478,3.884,479,5.726,480,3.884,481,3.884,482,4.944,483,4.944,484,3.884,485,3.884,486,3.884,487,3.884,488,3.242,489,3.884,490,2.82,491,3.884,492,3.884,493,3.884,494,3.884,495,3.884,496,3.884]],["title/miscellaneous/enumerations.html",[497,1.693,498,3.163]],["body/miscellaneous/enumerations.html",[7,0.241,14,0.029,102,0.029,103,0.029,147,2.154,296,2.944,297,3.37,310,3.273,311,3.273,497,3.273,498,4.239,499,5.078]],["title/index.html",[7,0.125,500,2.626,501,2.626]],["body/index.html",[1,0.655,4,0.252,14,0.033,19,0.206,23,1.412,29,1.524,30,1.158,38,1.158,58,1.158,102,0.026,103,0.026,104,0.309,140,2.578,143,1.91,266,3.422,268,4.431,281,3.16,284,3.16,502,5.962,503,6.295,504,5.962,505,6.113,506,4.353,507,5.308,508,5.727,509,4.353,510,5.308,511,5.308,512,4.353,513,4.353,514,5.727,515,4.353,516,4.353,517,3.634,518,4.353,519,4.353,520,4.353,521,4.353,522,4.353,523,4.353,524,4.353,525,4.353,526,4.353,527,4.353,528,4.353,529,4.353,530,4.353,531,4.353,532,4.353]],["title/modules.html",[265,2.495]],["body/modules.html",[14,0.029,102,0.029,103,0.029,265,2.974,266,3.307,533,5.131,534,5.131,535,5.131]],["title/overview.html",[536,3.593]],["body/overview.html",[0,0.025,14,0.028,19,0.237,102,0.028,103,0.028,104,0.355,137,2.322,141,2.015,265,3.341,281,3.63,284,3.63,488,4.175,517,4.175,536,4.175,537,5.001,538,5.001,539,5.763,540,5.001,541,5.001,542,5.001]],["title/miscellaneous/variables.html",[490,2.75,497,1.693]],["body/miscellaneous/variables.html",[5,0.699,7,0.239,14,0.03,102,0.029,103,0.029,106,2.542,134,2.213,135,2.032,151,2.455,152,1.342,153,2.418,490,3.661,497,3.251,543,5.044]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":333,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["0/1",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":137,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"overview.html":{}}}],["1/10",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":488,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":195,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["14",{"_index":542,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":138,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["200",{"_index":459,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["22",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["_concurr",{"_index":322,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_idcount",{"_index":323,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_queue",{"_index":324,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["accesstoken",{"_index":375,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["add",{"_index":327,"title":{},"body":{"classes/Queue.html":{}}}],["add(promisegener",{"_index":337,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["angular",{"_index":508,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":271,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["angular/cor",{"_index":143,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"index.html":{}}}],["angular/platform",{"_index":512,"title":{},"body":{"index.html":{}}}],["anim",{"_index":1,"title":{"interfaces/Animal.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["animalapicredenti",{"_index":20,"title":{"interfaces/AnimalApiCredentials.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalgen",{"_index":108,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalgener",{"_index":155,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalid",{"_index":125,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalmenuitemservic",{"_index":105,"title":{"classes/AnimalMenuItemService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmenuitemservice(this.cli",{"_index":226,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalmodelservic",{"_index":107,"title":{"classes/AnimalModelService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmodelservice:12",{"_index":119,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:13",{"_index":120,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:14",{"_index":117,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:25",{"_index":133,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:40",{"_index":129,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:54",{"_index":122,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmonthservic",{"_index":189,"title":{"classes/AnimalMonthService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmonthservice(this.cli",{"_index":224,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalpageservic",{"_index":184,"title":{"classes/AnimalPageService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalpageservice(this.cli",{"_index":221,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalquestionservic",{"_index":206,"title":{"classes/AnimalQuestionService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalquestionservice(this.cli",{"_index":229,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalsdkconfig",{"_index":27,"title":{"interfaces/AnimalSdkConfig.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalsdkconfigservic",{"_index":151,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animalsdkmodul",{"_index":266,"title":{"modules/AnimalSDKModule.html":{}},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"modules.html":{}}}],["animalsdkservic",{"_index":211,"title":{"injectables/AnimalSDKService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["answer",{"_index":74,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["api",{"_index":31,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["apistorag",{"_index":146,"title":{"classes/ApiStorage.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["apistorage.get(key",{"_index":172,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.getkey(this.model",{"_index":170,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apistorage.getkey(updatable.model",{"_index":317,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.process(res[camelmodel].map(p",{"_index":164,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apistorage.set(key",{"_index":181,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apivers",{"_index":394,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["app.compon",{"_index":515,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":514,"title":{},"body":{"index.html":{}}}],["applic",{"_index":23,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["application/json",{"_index":428,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["appmodul",{"_index":510,"title":{},"body":{"index.html":{}}}],["array",{"_index":44,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"interfaces/UrlParams.html":{}}}],["array.isarray(obj",{"_index":414,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["asc",{"_index":205,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["ask",{"_index":71,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalQuestionService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["ask(quest",{"_index":209,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["askquest",{"_index":78,"title":{"interfaces/AskQuestion.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["associ",{"_index":46,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["avail",{"_index":534,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":86,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["baseapiurl",{"_index":431,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["basic",{"_index":97,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["basicmonth",{"_index":96,"title":{"interfaces/BasicMonth.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["basicpag",{"_index":37,"title":{"interfaces/BasicPage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["bearer",{"_index":430,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["bodi",{"_index":40,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["boolean",{"_index":341,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["bootstrap",{"_index":517,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brows",{"_index":535,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":513,"title":{},"body":{"index.html":{}}}],["browsermodul",{"_index":511,"title":{},"body":{"index.html":{}}}],["buildanimalurl",{"_index":111,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["buildanimalurl(animalid",{"_index":121,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["buildresourc",{"_index":377,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildresource(url",{"_index":391,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildto",{"_index":526,"title":{},"body":{"index.html":{}}}],["buildurl",{"_index":378,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildurl(model",{"_index":393,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cach",{"_index":176,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["call",{"_index":32,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["callapi",{"_index":379,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["callapi(url",{"_index":396,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson",{"_index":453,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson._r",{"_index":455,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["camelmodel",{"_index":159,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["case",{"_index":457,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["catch",{"_index":367,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["catch(err",{"_index":365,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["class",{"_index":104,"title":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["client",{"_index":21,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["client.t",{"_index":374,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["client.ts:36",{"_index":408,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:4",{"_index":387,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:5",{"_index":388,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:52",{"_index":385,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:58",{"_index":401,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:6",{"_index":386,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:63",{"_index":398,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:7",{"_index":390,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:75",{"_index":395,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:80",{"_index":392,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:84",{"_index":397,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:9",{"_index":404,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client_credenti",{"_index":242,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["clientid",{"_index":24,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["clientsecret",{"_index":26,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["commonmodul",{"_index":270,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["compon",{"_index":518,"title":{},"body":{"index.html":{}}}],["conceivedon",{"_index":9,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["concurr",{"_index":330,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["config",{"_index":214,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{}}}],["connect",{"_index":34,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["console.log('connect",{"_index":215,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log('curr",{"_index":234,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log('log",{"_index":238,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log(`${fullurl",{"_index":451,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["console.log(`fetch",{"_index":179,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log(`return",{"_index":175,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["const",{"_index":150,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["constructor",{"_index":244,"title":{},"body":{"classes/AnimalModelService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["constructor(@inject(animalsdkconfigservic",{"_index":213,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["constructor(cli",{"_index":154,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["constructor(config",{"_index":287,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["constructor(domain",{"_index":384,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["constructor(maxqueu",{"_index":329,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["content",{"_index":427,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["continu",{"_index":420,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["coverag",{"_index":464,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":50,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["createdat",{"_index":51,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["credient",{"_index":33,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["current",{"_index":252,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["currentanim",{"_index":212,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d",{"_index":415,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["d.t",{"_index":524,"title":{},"body":{"index.html":{}}}],["d1",{"_index":259,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["d1.getfullyear",{"_index":194,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d1.getmonth",{"_index":196,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2",{"_index":192,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2.getfullyear",{"_index":193,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2.getmonth",{"_index":197,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["date",{"_index":15,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["date(storedobj.updatedat",{"_index":319,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["date(this.animalgen().conceivedon",{"_index":201,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["declar",{"_index":281,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":134,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":116,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}}}],["depend",{"_index":537,"title":{},"body":{"overview.html":{}}}],["dequeu",{"_index":328,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["descript",{"_index":39,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["develop",{"_index":521,"title":{},"body":{"index.html":{}}}],["direct",{"_index":519,"title":{},"body":{"index.html":{}}}],["document",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":28,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["draft",{"_index":57,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["email",{"_index":72,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["enum",{"_index":309,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["enumer",{"_index":498,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":368,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["error('queu",{"_index":351,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":55,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["fals",{"_index":358,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["fetch(fullurl",{"_index":448,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":67,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["filter(v",{"_index":445,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["forroot(config",{"_index":283,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["full",{"_index":69,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["fullurl",{"_index":438,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["function",{"_index":114,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["gener",{"_index":522,"title":{},"body":{"index.html":{}}}],["get",{"_index":500,"title":{"index.html":{}},"body":{}}],["get(id",{"_index":128,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["get(key",{"_index":301,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["getal",{"_index":113,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["getall(param",{"_index":132,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallansw",{"_index":262,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["getallanswered(param",{"_index":207,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallord",{"_index":253,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["getallordered(param",{"_index":203,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallpublish",{"_index":260,"title":{},"body":{"classes/AnimalPageService.html":{}}}],["getallpublished(param",{"_index":185,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getanim",{"_index":286,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["getanimal(id",{"_index":231,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getkey",{"_index":298,"title":{},"body":{"classes/ApiStorage.html":{}}}],["getkey(model",{"_index":303,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["go",{"_index":82,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["granttyp",{"_index":241,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["graph",{"_index":533,"title":{},"body":{"modules.html":{}}}],["header",{"_index":380,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headers['author",{"_index":429,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headersinit",{"_index":399,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["identifi",{"_index":18,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["imag",{"_index":45,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["image'",{"_index":66,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["imageurl",{"_index":47,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["import",{"_index":140,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["inform",{"_index":63,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["inherit",{"_index":115,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["inject",{"_index":141,"title":{"injectables/AnimalSDKService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":142,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["injectiontoken('animalsdkconfig",{"_index":153,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"miscellaneous/variables.html":{}}}],["instal",{"_index":502,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":310,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["isauth",{"_index":376,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["item",{"_index":80,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["item.reject(err",{"_index":366,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["item.resolve(valu",{"_index":364,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["js",{"_index":523,"title":{},"body":{"index.html":{}}}],["json",{"_index":180,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":315,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(object",{"_index":314,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(param",{"_index":447,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["json.updatedat",{"_index":182,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["jsonbodi",{"_index":437,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k",{"_index":412,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k[1].touppercas",{"_index":413,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["key",{"_index":169,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["key}=${params[key",{"_index":444,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["last",{"_index":52,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["legend",{"_index":538,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":503,"title":{},"body":{"index.html":{}}}],["limit",{"_index":352,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["link",{"_index":59,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["lint",{"_index":527,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":529,"title":{},"body":{"index.html":{}}}],["liter",{"_index":407,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["localstorage.setitem(key",{"_index":313,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["log",{"_index":41,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["login",{"_index":235,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["mata",{"_index":532,"title":{},"body":{"index.html":{}}}],["match",{"_index":103,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxqueu",{"_index":325,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["menu",{"_index":79,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["menu_item",{"_index":227,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["menuitem",{"_index":81,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["meta",{"_index":95,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["metadata.json",{"_index":525,"title":{},"body":{"index.html":{}}}],["method",{"_index":109,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["miscellan",{"_index":497,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":530,"title":{},"body":{"index.html":{}}}],["model",{"_index":36,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["model}${id",{"_index":312,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["modul",{"_index":265,"title":{"modules/AnimalSDKModule.html":{},"modules.html":{}},"body":{"modules/AnimalSDKModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":269,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["month",{"_index":42,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["monthdiff",{"_index":254,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["monthdiff(d1",{"_index":191,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["more",{"_index":62,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["moreinfourl",{"_index":64,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["new",{"_index":152,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newobj",{"_index":409,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.replace(/(\\_\\w)/g",{"_index":422,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.split(/(?=[a",{"_index":418,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["ngmodul",{"_index":268,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{}}}],["nichola",{"_index":531,"title":{},"body":{"index.html":{}}}],["nil",{"_index":208,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["npm",{"_index":505,"title":{},"body":{"index.html":{}}}],["null",{"_index":139,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["null).join",{"_index":446,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["number",{"_index":17,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["oauth",{"_index":22,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["oauth/token",{"_index":237,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["obj",{"_index":405,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.hasownproperty(d",{"_index":416,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.replace(/(\\_\\w)/g",{"_index":411,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj[d",{"_index":417,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["object",{"_index":130,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["object.keys(params).map(key",{"_index":441,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["onc",{"_index":507,"title":{},"body":{"index.html":{}}}],["option",{"_index":124,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"interfaces/Page.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["order",{"_index":202,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["other",{"_index":98,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["out",{"_index":541,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":536,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":165,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["p.updatedat",{"_index":166,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["page",{"_index":35,"title":{"interfaces/Page.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagecount",{"_index":90,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageid",{"_index":83,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageimag",{"_index":48,"title":{"interfaces/PageImage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagenum",{"_index":100,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pages",{"_index":92,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pagetyp",{"_index":43,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pagin",{"_index":87,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["paginginfo",{"_index":93,"title":{"interfaces/PagingInfo.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagingmeta",{"_index":88,"title":{"interfaces/PagingMeta.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["param",{"_index":136,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{}}}],["paramet",{"_index":123,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["params).then(r",{"_index":163,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params.search",{"_index":186,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params['sort",{"_index":204,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params[key",{"_index":443,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["pendingcount",{"_index":326,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["per",{"_index":91,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["person",{"_index":70,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pipe",{"_index":520,"title":{},"body":{"index.html":{}}}],["posit",{"_index":84,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["post",{"_index":210,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["pregen",{"_index":16,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pregnanc",{"_index":256,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["privat",{"_index":190,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["process",{"_index":299,"title":{},"body":{"classes/ApiStorage.html":{}}}],["process(updat",{"_index":305,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["promis",{"_index":131,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["promise((r",{"_index":177,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promise.resolve(item.promisegener",{"_index":362,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promisegener",{"_index":339,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["protect",{"_index":110,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["provid",{"_index":284,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":112,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["publish",{"_index":58,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["queri",{"_index":440,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["question",{"_index":68,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["queue",{"_index":320,"title":{"classes/Queue.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["queue(infin",{"_index":389,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["queueentri",{"_index":342,"title":{"classes/QueueEntry.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["rail",{"_index":145,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapicli",{"_index":118,"title":{"classes/RailsApiClient.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["railsapiclient(config.domain",{"_index":217,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapiclient.tocamelcase(json",{"_index":454,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["railsapiclient.tocamelcase(this.model",{"_index":160,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapiclient.tosnakecase(param",{"_index":439,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["re",{"_index":355,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["reach",{"_index":353,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reason",{"_index":345,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej",{"_index":199,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej(new",{"_index":350,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reject",{"_index":344,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["res(storedobj.item",{"_index":178,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res(this.monthdiff(new",{"_index":200,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res.json().then(json",{"_index":452,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res.meta",{"_index":168,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res.statu",{"_index":458,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res[camelmodel",{"_index":167,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["reset",{"_index":540,"title":{},"body":{"overview.html":{}}}],["resolv",{"_index":343,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["respondedbyid",{"_index":77,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["respons",{"_index":75,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["result",{"_index":102,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["run",{"_index":504,"title":{},"body":{"index.html":{}}}],["sample.compon",{"_index":274,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.direct",{"_index":276,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.pip",{"_index":278,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.servic",{"_index":280,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplecompon",{"_index":273,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampledirect",{"_index":275,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplepip",{"_index":277,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampleservic",{"_index":279,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["saveconsum",{"_index":506,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":29,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["sdk.model",{"_index":144,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{}}}],["sdk.models.t",{"_index":6,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["sdk.servic",{"_index":272,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sdk.service.t",{"_index":106,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk.service.ts:101",{"_index":263,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["sdk.service.ts:110",{"_index":291,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:111",{"_index":292,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:112",{"_index":295,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:113",{"_index":294,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:114",{"_index":293,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:115",{"_index":288,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:12",{"_index":247,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:13",{"_index":248,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:131",{"_index":289,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:139",{"_index":290,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:14",{"_index":246,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:25",{"_index":251,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:40",{"_index":250,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:54",{"_index":249,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:60",{"_index":261,"title":{},"body":{"classes/AnimalPageService.html":{}}}],["sdk.service.ts:67",{"_index":258,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:77",{"_index":255,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:89",{"_index":257,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:96",{"_index":264,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["sdkand",{"_index":509,"title":{},"body":{"index.html":{}}}],["search",{"_index":101,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["secret",{"_index":25,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["self",{"_index":348,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["self._queue.length",{"_index":349,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["self._queue.push",{"_index":354,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["self.dequeu",{"_index":356,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["self.pendingcount",{"_index":361,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["set",{"_index":300,"title":{},"body":{"classes/ApiStorage.html":{}}}],["set(key",{"_index":307,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["setaccesstoken",{"_index":381,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["setaccesstoken(token",{"_index":400,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["side",{"_index":85,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["specif",{"_index":230,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["specifi",{"_index":516,"title":{},"body":{"index.html":{}}}],["src/.../anim",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/anim",{"_index":5,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api",{"_index":296,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/index.t",{"_index":267,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["src/queue.t",{"_index":321,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["src/queue.ts:10",{"_index":334,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:11",{"_index":332,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:12",{"_index":331,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:18",{"_index":338,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:2",{"_index":370,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:3",{"_index":372,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:36",{"_index":340,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:4",{"_index":371,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:8",{"_index":336,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:9",{"_index":335,"title":{},"body":{"classes/Queue.html":{}}}],["src/rail",{"_index":373,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["start",{"_index":501,"title":{"index.html":{}},"body":{}}],["statement",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":282,"title":{},"body":{"modules/AnimalSDKModule.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["statu",{"_index":56,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["status=1,page_type=log",{"_index":187,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storag",{"_index":149,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storage.t",{"_index":297,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["storage.ts:18",{"_index":304,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:21",{"_index":308,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:25",{"_index":302,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:29",{"_index":306,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:6",{"_index":461,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:7",{"_index":463,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:8",{"_index":462,"title":{},"body":{"classes/StorageItem.html":{}}}],["storageitem",{"_index":148,"title":{"classes/StorageItem.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["storagestatu",{"_index":147,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["storagestatus.valid",{"_index":174,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storedobj",{"_index":171,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["storedobj.statu",{"_index":173,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["switch",{"_index":456,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["t",{"_index":94,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["tabl",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":73,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["then((valu",{"_index":363,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["then(json",{"_index":460,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["then(r",{"_index":450,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this._concurr",{"_index":347,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.shift",{"_index":359,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.accesstoken",{"_index":425,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.animalgen",{"_index":158,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.buildanimalurl(this.animalgen().id",{"_index":162,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.buildresource(baseapiurl",{"_index":434,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.client",{"_index":156,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.buildresource(this.client.buildurl('anim",{"_index":183,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.buildurl('anim",{"_index":232,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.callapi",{"_index":161,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.callapi(url",{"_index":233,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.domain",{"_index":236,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.queue.add",{"_index":198,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.setaccesstoken(json.accesstoken",{"_index":243,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.credientals.clientid",{"_index":239,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.credientals.clientsecret",{"_index":240,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.domain",{"_index":216,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.currentanim",{"_index":222,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.domain",{"_index":424,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.domain}api/${(apivers",{"_index":432,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.getall(param",{"_index":188,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.getanimal(1",{"_index":219,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.head",{"_index":449,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.isauth",{"_index":426,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.login",{"_index":218,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.maxqueu",{"_index":346,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.menuitem",{"_index":225,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.model",{"_index":157,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.month",{"_index":223,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.pag",{"_index":220,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.pendingcount",{"_index":357,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.quest",{"_index":228,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.queue.add",{"_index":436,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tocamelcase(obj[d",{"_index":421,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tosnakecase(obj[d",{"_index":423,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["time",{"_index":49,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["titl",{"_index":38,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["tocamelcas",{"_index":382,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tocamelcase(obj",{"_index":403,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["token",{"_index":402,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecas",{"_index":383,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecase(obj",{"_index":406,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["total",{"_index":89,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["tri",{"_index":360,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["true",{"_index":369,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["ts",{"_index":528,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["typeof",{"_index":410,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["updat",{"_index":53,"title":{"interfaces/Updatable.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["updatable.id",{"_index":318,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatables.foreach(updat",{"_index":316,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatedat",{"_index":54,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["url",{"_index":65,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["urlparam",{"_index":99,"title":{"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["url}/${model}${id",{"_index":435,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["us",{"_index":30,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["user",{"_index":76,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["usevalu",{"_index":285,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["v1",{"_index":433,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["val",{"_index":442,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["valid",{"_index":311,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["valu",{"_index":135,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":490,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":60,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["videourl",{"_index":61,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["void",{"_index":245,"title":{},"body":{"classes/AnimalModelService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["ye",{"_index":126,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["z])/).join('_').tolowercas",{"_index":419,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["zoom",{"_index":539,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Animal.html":{"url":"interfaces/Animal.html","title":"interface - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        conceivedOn\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conceivedOn\n                                    \n                                \n                                \n                                    \n                                        conceivedOn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the animal got pregenant.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Animal Identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animals name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalApiCredentials.html":{"url":"interfaces/AnimalApiCredentials.html","title":"interface - AnimalApiCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalApiCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client identifier of oauth application.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client secret of oauth application.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalMenuItemService.html":{"url":"classes/AnimalMenuItemService.html","title":"class - AnimalMenuItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalMenuItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalModelService.html":{"url":"classes/AnimalModelService.html","title":"class - AnimalModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: RailsApiClient, model: string, animalGenerator: () => void)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    RailsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalGenerator\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalMonthService.html":{"url":"classes/AnimalMonthService.html","title":"class - AnimalMonthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalMonthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Public\n                                getAllOrdered\n                            \n                            \n                                    Private\n                                monthDiff\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        current()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Returns the current Month which the animal is in its pregnancy.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllOrdered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllOrdered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Get all months in order by month number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                The url params.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            monthDiff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        monthDiff(d1: Date, d2: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d1\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        d2\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalPageService.html":{"url":"classes/AnimalPageService.html","title":"class - AnimalPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllPublished\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllPublished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllPublished(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalQuestionService.html":{"url":"classes/AnimalQuestionService.html","title":"class - AnimalQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ask\n                            \n                            \n                                    Public\n                                getAllAnswered\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ask(question: AskQuestion)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    AskQuestion\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllAnswered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalSDKModule.html":{"url":"modules/AnimalSDKModule.html","title":"module - AnimalSDKModule","body":"\n                   \n\n\n\n\n  Modules\n  AnimalSDKModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnimalSDKService, AnimalSdkConfigService } from './animal-sdk.service';\nimport { AnimalSdkConfig } from './animal-sdk.models';\n// import { SampleComponent } from './sample.component';\n// import { SampleDirective } from './sample.directive';\n// import { SamplePipe } from './sample.pipe';\n// import { SampleService } from './sample.service';\n\n// export * from './sample.component';\n// export * from './sample.directive';\n// export * from './sample.pipe';\n// export * from './sample.service';\n\nexport * from './animal-sdk.models';\nexport * from './animal-sdk.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ],\n  exports: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ]\n})\nexport class AnimalSDKModule {\n  static forRoot(config: AnimalSdkConfig): ModuleWithProviders {\n    return {\n      ngModule: AnimalSDKModule,\n      providers: [\n        AnimalSDKService,\n        {\n          provide: AnimalSdkConfigService,\n          useValue: config\n        }]\n      // providers: [SampleService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalSDKService.html":{"url":"injectables/AnimalSDKService.html","title":"injectable - AnimalSDKService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimalSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                currentAnimal\n                            \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Public\n                                months\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Public\n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAnimal\n                            \n                            \n                                    Private\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalSdkConfig)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AnimalSdkConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAnimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAnimal(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Get a specific Animal.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The animal identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentAnimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentAnimal:     Animal\n\n                    \n                \n                    \n                        \n                            Type :     Animal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     AnimalMenuItemService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalMenuItemService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            months\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        months:     AnimalMonthService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalMonthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     AnimalPageService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalPageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     AnimalQuestionService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalQuestionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:115\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalSdkConfig.html":{"url":"interfaces/AnimalSdkConfig.html","title":"interface - AnimalSdkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalSdkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        credientals\n                                \n                                \n                                        domain\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credientals\n                                    \n                                \n                                \n                                    \n                                        credientals:     AnimalApiCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnimalApiCredentials\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client credientals used when connecting to API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The domain that the SDK should use in API calls.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiStorage.html":{"url":"classes/ApiStorage.html","title":"class - ApiStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                getKey\n                            \n                            \n                                    Static\n                                process\n                            \n                            \n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StorageItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKey(model: string, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(updatables: [Updatable])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updatables\n                                                        \n                                                                    [Updatable]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, object: StorageItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        object\n                                                        \n                                                                    StorageItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AskQuestion.html":{"url":"interfaces/AskQuestion.html","title":"interface - AskQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AskQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicMonth.html":{"url":"interfaces/BasicMonth.html","title":"interface - BasicMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        page\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The month number \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     BasicPage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BasicPage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Basic Page Information \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicPage.html":{"url":"interfaces/BasicPage.html","title":"interface - BasicPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        imageUrls\n                                \n                                \n                                        pageType\n                                \n                                \n                                        title\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time this page was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                    \n                                \n                                \n                                    \n                                        imageUrls:     [PageImage]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [PageImage]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of images associated with this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of page.\n\"log\", \"month\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last time this page was updated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        pageId\n                                \n                                \n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MenuItem Identifier \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageId\n                                    \n                                \n                                \n                                    \n                                        pageId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page identifier this menu item should go to. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position on the menu item in the side bar. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicPage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        moreInfoUrl\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        videoUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moreInfoUrl\n                                    \n                                \n                                \n                                    \n                                        moreInfoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to more information about this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page status.\n\"draft\", \"published\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoUrl\n                                    \n                                \n                                \n                                    \n                                        videoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to a video associated with this page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageImage.html":{"url":"interfaces/PageImage.html","title":"interface - PageImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image's filename.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to the image.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingInfo.html":{"url":"interfaces/PagingInfo.html","title":"interface - PagingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        meta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     [T]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [T]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items in the page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                    \n                                \n                                \n                                    \n                                        meta:     PagingMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PagingMeta\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Paging information used when paginating.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingMeta.html":{"url":"interfaces/PagingMeta.html","title":"interface - PagingMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n            \n                Description\n            \n            \n                Models used for pagination. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageCount\n                                \n                                \n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of total pages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of items per page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        respondedById\n                                \n                                \n                                        response\n                                \n                                \n                                        status\n                                \n                                \n                                        text\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was created. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Question Identifier \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        respondedById\n                                    \n                                \n                                \n                                    \n                                        respondedById:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user id of the person who responsed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response to the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the question\n\"asked\", \"answered\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was updated \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _concurrency\n                            \n                            \n                                _idCount\n                            \n                            \n                                _queue\n                            \n                            \n                                maxQueue\n                            \n                            \n                                pendingCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Private\n                                dequeue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxQueue: number, concurrency?: number)\n                    \n                \n                        \n                            \n                                Defined in src/queue.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxQueue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        concurrency\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _concurrency\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _concurrency:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _idCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _idCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxQueue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pendingCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pendingCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add(promiseGenerator: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseGenerator\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dequeue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dequeue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n\n        const self = this;\n        return new Promise((res, rej) => {\n            if (self._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            self._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            self.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        const self = this;\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            self.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    self.pendingCount--;\n                    self.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    self.pendingCount--;\n                    self.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            self.pendingCount--;\n            self.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueueEntry.html":{"url":"classes/QueueEntry.html","title":"class - QueueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promiseGenerator\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promiseGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseGenerator:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reject:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resolve:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n\n        const self = this;\n        return new Promise((res, rej) => {\n            if (self._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            self._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            self.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        const self = this;\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            self.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    self.pendingCount--;\n                    self.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    self.pendingCount--;\n                    self.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            self.pendingCount--;\n            self.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RailsApiClient.html":{"url":"classes/RailsApiClient.html","title":"class - RailsApiClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RailsApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rails-api-client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessToken\n                            \n                            \n                                    Public\n                                domain\n                            \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildResource\n                            \n                            \n                                    Public\n                                buildUrl\n                            \n                            \n                                    Public\n                                callApi\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                            \n                                    Static\n                                toCamelCase\n                            \n                            \n                                    Static\n                                toSnakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(domain: string)\n                    \n                \n                        \n                            \n                                Defined in src/rails-api-client.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domain\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        domain:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuth:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Queue(Infinity)\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildResource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildResource(url: string, model: string, id: number | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildUrl(model: string, id: number | null, apiVersion?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiVersion\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            callApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callApi(url: string | , method: string, params: any, then: (value: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string | \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        then\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                (value?: any) => { }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        headers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HeadersInit\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toCamelCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toCamelCase(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toSnakeCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toSnakeCase(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Queue } from './queue';\n\nexport class RailsApiClient {\n    public domain: string;\n    public isAuth = false;\n    private accessToken: string;\n    public queue = new Queue(Infinity);\n\n    public static toCamelCase(obj: any): any {\n        let newObj = {};\n        if (typeof obj === 'string') {\n            return obj.replace(/(\\_\\w)/g, (k) => {\n                return k[1].toUpperCase();\n            });\n        }\n        if (Array.isArray(obj)) {\n            newObj = [];\n        }\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toCamelCase(obj[d]);\n                }\n                newObj[d.replace(/(\\_\\w)/g, (k) => {\n                    return k[1].toUpperCase();\n                })] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    public static toSnakeCase(obj: {}): any {\n        const newObj = {};\n\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toSnakeCase(obj[d]);\n                }\n                newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    constructor(domain: string) {\n        this.domain = domain;\n    }\n\n    public setAccessToken(token: string) {\n        this.accessToken = token;\n        this.isAuth = true;\n    }\n\n    private headers(): HeadersInit {\n        const headers: { [key: string]: string } = {\n            'Content-Type': 'application/json'\n        };\n\n        if (this.isAuth) {\n            headers['Authorization'] = `Bearer ${this.accessToken}`;\n        }\n\n        return headers;\n    }\n\n    public buildUrl(model: string, id: number | null, apiVersion?: string): string {\n        const baseApiUrl = `${this.domain}api/${(apiVersion || 'v1')}`;\n        return this.buildResource(baseApiUrl, model, id);\n    }\n\n    public buildResource(url: string, model: string, id: number | null = null): string {\n        return `${url}/${model}${id != null ? ('/' + id) : ''}`;\n    }\n\n    public callApi(url: string | (() => string),\n        method: string,\n        params: any = null,\n        then: (value?: any) => void = (value?: any) => { }): Promise {\n\n        return this.queue.add(() => {\n            let jsonBody: string = null;\n            let fullUrl = url;\n            if (typeof fullUrl === 'function') {\n                fullUrl = fullUrl();\n            }\n            if (method === 'GET') {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n\n                    const query = Object.keys(params).map(key => {\n                        const val = params[key];\n                        if (!val) {\n                            return null;\n                        }\n                        return `${key}=${params[key]}`;\n                    }).filter(val => val != null).join('&');\n                    fullUrl += '?' + query;\n                }\n            } else {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n                    jsonBody = JSON.stringify(params);\n                }\n            }\n            return fetch(fullUrl, {\n                body: jsonBody,\n                headers: this.headers(),\n                method,\n            }).then(res => {\n                console.log(`${fullUrl} Response:`, res);\n                return res.json().then(json => {\n                    const camelJson = RailsApiClient.toCamelCase(json);\n                    camelJson._res = res;\n                    switch (true) {\n                        case (res.status >= 200 && res.status  {\n                then(json);\n                return json;\n            });\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageItem.html":{"url":"classes/StorageItem.html","title":"class - StorageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     StorageStatus\n\n                    \n                \n                    \n                        \n                            Type :     StorageStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatedAt:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Updatable.html":{"url":"interfaces/Updatable.html","title":"interface - Updatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Updatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        model\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlParams.html":{"url":"interfaces/UrlParams.html","title":"interface - UrlParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pageNum\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageNum\n                                    \n                                \n                                \n                                    \n                                        pageNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                    \n                                \n                                \n                                    \n                                        search:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Animal\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalApiCredentials\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalSdkConfig\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AskQuestion\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicMonth\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicPage\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Page\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PageImage\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingInfo\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingMeta\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Question\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                UrlParams\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalMenuItemService\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalModelService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalMonthService\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalPageService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalQuestionService\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                injectable\n            \n            \n                AnimalSDKService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                variable\n            \n            \n                AnimalSdkConfigService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                ApiStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                StorageItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                interface\n            \n            \n                Updatable\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                Queue\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                QueueEntry\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/rails-api-client.ts\n            \n            \n                class\n            \n            \n                RailsApiClient\n            \n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StorageStatus   (src/.../api-storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api-storage.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageStatus\n                    \n                \n                        \n                            \n                                 invalid\n                            \n                        \n                        \n                            \n                                 valid\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nanimal-sdk\nInstallation\nTo install this library, run:\n$ npm install animal-sdk --saveConsuming your library\nOnce you have published your library to npm, you can import your library in any Angular application by running:\n$ npm install animal-sdkand then from your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { AnimalSDKModule } from 'animal-sdk';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    AnimalSDKModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Once your library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © Nicholas Mata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalSDKModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalSdkConfigService   (src/.../animal-sdk.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/animal-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimalSdkConfigService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimalSdkConfigService:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimalSdkConfig')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
