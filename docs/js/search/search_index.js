var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/Animal.html",[0,0.015,1,0.334]],["body/interfaces/Animal.html",[0,0.029,1,0.62,2,0.19,3,0.19,4,0.127,5,0.37,6,0.703,7,0.127,8,0.366,9,1.374,10,0.629,11,0.736,12,0.691,13,0.342,14,0.032,15,0.816,16,1.085,17,0.513,18,0.88,19,0.283,20,0.92,21,0.749,22,1.085,23,1,24,0.453,25,0.763,26,0.453,27,0.331,28,1,29,0.703,30,1.267,31,0.525,32,0.763,33,1.085,34,0.763,35,0.854,36,0.558,37,0.611,38,1.163,39,0.644,40,1,41,0.763,42,0.768,43,0.763,44,0.647,45,1.262,46,1.085,47,0.763,48,0.92,49,1.262,50,1.085,51,1.085,52,1.085,53,0.823,54,0.547,55,0.644,56,0.596,57,0.763,58,0.703,59,1.085,60,0.763,61,0.763,62,0.763,63,1.262,64,0.763,65,0.583,66,0.763,67,1.085,68,0.817,69,1.085,70,1.452,71,1.43,72,1.374,73,1.085,74,0.763,75,0.679,76,0.763,77,0.763,78,0.37,79,1.374,80,0.524,81,0.525,82,0.763,83,0.763,84,1.085,85,0.763,86,0.763,87,1.085,88,0.92,89,0.763,90,0.763,91,0.763,92,0.644,93,0.37,94,0.595,95,0.453,96,0.525,97,0.763,98,0.763,99,0.763,100,0.453,101,0.763,102,0.37,103,0.453,104,0.453,105,0.019,106,0.019]],["title/interfaces/AnimalApiCredentials.html",[0,0.015,20,0.736]],["body/interfaces/AnimalApiCredentials.html",[0,0.029,1,0.559,2,0.191,3,0.191,4,0.128,5,0.372,6,0.707,7,0.128,8,0.368,9,0.767,10,0.598,11,0.71,12,0.692,13,0.315,14,0.032,15,0.751,16,0.767,17,0.51,18,0.881,19,0.283,20,1.074,21,0.864,22,1.378,23,1.27,24,0.818,25,1.089,26,0.818,27,0.333,28,1.004,29,0.707,30,1.27,31,0.527,32,0.767,33,1.089,34,0.767,35,0.855,36,0.559,37,0.613,38,1.167,39,0.646,40,1.004,41,0.767,42,0.769,43,0.767,44,0.651,45,1.266,46,1.089,47,0.767,48,0.924,49,1.266,50,1.089,51,1.089,52,1.089,53,0.826,54,0.549,55,0.646,56,0.597,57,0.767,58,0.707,59,1.089,60,0.767,61,0.767,62,0.767,63,1.266,64,0.767,65,0.586,66,0.767,67,1.089,68,0.817,69,1.089,70,1.455,71,1.433,72,1.378,73,1.089,74,0.767,75,0.681,76,0.767,77,0.767,78,0.372,79,1.378,80,0.525,81,0.527,82,0.767,83,0.767,84,1.089,85,0.767,86,0.767,87,1.089,88,0.924,89,0.767,90,0.767,91,0.767,92,0.646,93,0.372,94,0.598,95,0.455,96,0.527,97,0.767,98,0.767,99,0.767,100,0.455,101,0.767,102,0.372,103,0.455,104,0.455,105,0.019,106,0.019]],["title/classes/AnimalMenuItemService.html",[107,0.254,108,1.411]],["body/classes/AnimalMenuItemService.html",[1,0.606,2,0.172,3,0.172,4,0.115,5,0.335,7,0.115,8,0.341,10,0.637,11,0.518,12,0.561,13,0.363,14,0.032,15,0.709,17,0.485,18,0.751,19,0.251,21,0.895,24,0.411,26,0.411,27,0.438,31,0.579,35,0.636,36,0.624,37,0.335,39,0.6,42,0.763,54,0.438,55,0.83,56,0.3,65,0.751,68,0.636,75,0.372,78,0.49,80,0.341,81,0.49,92,0.83,93,0.335,95,0.411,96,0.335,100,0.6,102,0.73,103,0.83,104,0.83,105,0.018,106,0.018,107,0.441,108,1.943,109,1.126,110,2.67,111,2.551,112,1.513,113,2.319,114,2.161,115,1.976,116,2.161,117,1.645,118,3.463,119,1.856,120,1.643,121,2.183,122,1.643,123,1.643,124,1.963,125,1.643,126,2.091,127,1.519,128,1.228,129,1.864,130,1.963,131,1.643,132,1.811,133,2.312,134,1.963,135,1.643,136,1.126,137,1.036,138,2.74,139,2.255,140,2.713,141,2.078,142,1.966,143,1.787,144,1.344,145,1.126,146,1.228,147,1.344,148,0.881,149,0.954,150,0.881,151,1.344,152,1.713,153,1.036,154,1.576,155,1.228,156,1.344,157,1.963,158,1.963,159,2.713,160,1.344,161,1.344,162,1.344,163,2.319,164,2.319,165,1.344,166,1.344,167,1.344,168,1.344,169,1.344,170,1.344,171,0.954,172,1.344,173,1.787,174,1.036,175,1.344,176,1.963,177,1.344,178,1.344,179,1.645,180,1.344,181,1.344,182,2.588,183,1.344,184,1.344,185,1.344,186,1.645,187,1.344,188,1.963,189,1.344,190,2.319,191,1.645,192,1.787,193,1.344,194,1.344,195,1.344,196,1.344,197,1.344,198,1.344,199,1.344,200,1.344,201,1.126,202,1.344,203,1.344,204,1.344,205,1.344,206,1.344,207,1.344,208,1.645,209,1.344,210,1.344,211,1.344,212,1.963,213,1.036,214,1.344,215,1.344,216,1.228,217,1.344,218,1.344,219,1.344,220,1.344,221,1.344,222,1.344,223,1.344,224,2.833,225,1.344,226,1.344,227,1.344,228,1.344,229,1.344,230,1.344,231,1.344,232,1.344,233,1.344,234,1.344,235,1.963,236,1.344,237,1.344,238,1.344,239,1.344,240,1.344,241,1.344,242,1.344,243,1.344,244,1.344,245,1.344]],["title/classes/AnimalModelService.html",[107,0.254,110,1.411]],["body/classes/AnimalModelService.html",[1,0.604,2,0.17,3,0.17,4,0.114,5,0.746,7,0.114,8,0.338,10,0.636,11,0.566,12,0.592,13,0.374,14,0.032,15,0.704,17,0.484,18,0.748,19,0.25,21,0.914,24,0.406,26,0.406,27,0.434,31,0.575,35,0.633,36,0.636,37,0.331,39,0.595,42,0.761,54,0.434,55,0.775,56,0.296,65,0.748,68,0.633,75,0.368,78,0.486,80,0.338,81,0.486,92,0.826,93,0.331,95,0.406,96,0.331,100,0.595,102,0.727,103,0.826,104,0.826,105,0.017,106,0.017,107,0.439,108,1.63,109,1.113,110,2.364,111,2.536,112,1.5,113,2.303,114,2.142,115,1.972,116,2.142,117,1.93,119,1.91,121,2.304,124,1.946,126,2.174,127,1.662,128,1.213,129,1.861,130,1.946,132,1.801,133,2.304,134,1.946,136,1.113,137,1.023,138,2.731,139,2.246,140,2.7,141,2.07,142,1.954,143,1.775,144,1.328,145,1.113,146,1.213,147,1.328,148,0.87,149,0.943,150,0.87,151,1.328,152,1.706,153,1.023,154,1.571,155,1.213,156,1.946,157,2.536,158,1.946,159,2.7,160,1.328,161,1.328,162,1.328,163,2.303,164,2.303,165,1.328,166,1.328,167,1.328,168,1.328,169,1.328,170,1.328,171,0.943,172,1.328,173,1.775,174,1.023,175,1.328,176,1.946,177,1.328,178,1.328,179,1.63,180,1.328,181,1.328,182,2.577,183,1.328,184,1.328,185,1.328,186,1.63,187,1.328,188,1.946,189,1.328,190,2.303,191,1.63,192,1.775,193,1.328,194,1.328,195,1.328,196,1.328,197,1.328,198,1.328,199,1.328,200,1.328,201,1.113,202,1.328,203,1.328,204,1.328,205,1.328,206,1.328,207,1.328,208,1.63,209,1.328,210,1.328,211,1.328,212,1.946,213,1.023,214,1.328,215,1.328,216,1.213,217,1.328,218,1.328,219,1.328,220,1.328,221,1.328,222,1.328,223,1.328,224,2.821,225,1.328,226,1.328,227,1.328,228,1.328,229,1.328,230,1.328,231,1.328,232,1.328,233,1.328,234,1.328,235,1.946,236,1.328,237,1.328,238,1.328,239,1.328,240,1.328,241,1.328,242,1.328,243,1.328,244,1.328,245,1.328,246,1.623,247,1.328,248,3.67,249,2.505,250,2.505,251,2.505,252,2.505,253,2.505]],["title/classes/AnimalMonthService.html",[107,0.254,191,1.411]],["body/classes/AnimalMonthService.html",[1,0.607,2,0.163,3,0.163,4,0.109,5,0.619,7,0.109,8,0.327,10,0.63,11,0.591,12,0.549,13,0.378,14,0.032,15,0.878,17,0.487,18,0.734,19,0.246,21,0.878,24,0.387,26,0.387,27,0.42,31,0.559,35,0.619,36,0.616,37,0.316,39,0.685,42,0.786,54,0.42,55,0.81,56,0.283,65,0.768,68,0.619,75,0.351,78,0.469,80,0.327,81,0.469,92,0.848,93,0.316,95,0.387,96,0.316,100,0.575,102,0.752,103,0.848,104,0.848,105,0.017,106,0.017,107,0.433,108,1.575,109,1.062,110,2.638,111,2.479,112,1.449,113,2.241,114,2.07,115,2.004,116,2.07,117,1.575,118,3.391,119,1.974,120,1.549,121,2.138,122,1.549,123,1.549,124,1.88,125,1.549,126,2.213,127,1.735,128,1.158,129,1.879,130,1.88,131,1.549,132,1.761,133,2.363,134,1.88,135,1.549,136,1.575,137,1.449,138,2.801,139,2.273,140,2.774,141,2.095,142,1.911,143,1.727,144,1.267,145,1.062,146,1.158,147,1.267,148,0.83,149,0.9,150,0.83,151,1.267,152,1.678,153,0.977,154,1.552,155,1.158,156,1.267,157,1.88,158,1.88,159,2.648,160,1.267,161,1.267,162,1.267,163,2.241,164,2.241,165,1.267,166,1.267,167,1.267,168,1.267,169,1.267,170,1.267,171,0.9,172,1.267,173,1.727,174,0.977,175,1.267,176,1.88,177,1.267,178,1.267,179,1.575,180,1.267,181,1.267,182,2.534,183,1.267,184,1.267,185,1.267,186,1.575,187,1.267,188,1.88,189,1.267,190,2.241,191,1.878,192,2.041,193,1.88,194,2.241,195,1.267,196,1.267,197,1.267,198,1.267,199,1.267,200,1.267,201,1.062,202,1.267,203,1.267,204,1.88,205,1.88,206,1.267,207,1.267,208,1.575,209,1.267,210,1.267,211,1.267,212,1.88,213,0.977,214,1.267,215,1.267,216,1.158,217,1.267,218,1.267,219,1.267,220,1.267,221,1.267,222,1.267,223,1.267,224,2.774,225,1.267,226,1.267,227,1.267,228,1.267,229,1.267,230,1.267,231,1.267,232,1.267,233,1.267,234,1.267,235,1.88,236,1.267,237,1.267,238,1.267,239,1.267,240,1.267,241,1.267,242,1.267,243,1.267,244,1.267,245,1.267,254,4.677,255,3.546,256,3.546,257,2.39,258,2.39,259,2.39,260,2.39,261,2.39]],["title/classes/AnimalPageService.html",[107,0.254,186,1.411]],["body/classes/AnimalPageService.html",[1,0.602,2,0.168,3,0.168,4,0.113,5,0.482,7,0.113,8,0.336,10,0.634,11,0.563,12,0.557,13,0.372,14,0.032,15,0.7,17,0.483,18,0.744,19,0.249,21,0.888,24,0.402,26,0.402,27,0.431,31,0.571,35,0.629,36,0.621,37,0.328,39,0.59,42,0.759,54,0.431,55,0.822,56,0.293,65,0.744,68,0.629,75,0.364,78,0.482,80,0.336,81,0.482,92,0.859,93,0.328,95,0.402,96,0.328,100,0.59,102,0.759,103,0.859,104,0.859,105,0.017,106,0.017,107,0.438,108,1.617,109,1.1,110,2.657,111,2.523,112,1.487,113,2.288,114,2.125,115,1.994,116,2.125,117,1.617,118,3.435,119,1.903,120,1.605,121,2.166,122,1.605,123,1.605,124,1.93,125,1.605,126,2.166,127,1.653,128,1.2,129,1.867,130,1.93,131,1.605,132,1.791,133,2.344,134,1.93,135,1.605,136,1.617,137,1.487,138,2.778,139,2.297,140,2.81,141,2.116,142,1.944,143,1.764,144,1.313,145,1.1,146,1.2,147,1.313,148,0.86,149,0.933,150,0.86,151,1.313,152,1.7,153,1.012,154,1.566,155,1.2,156,1.313,157,1.93,158,1.93,159,2.688,160,1.313,161,1.313,162,1.313,163,2.288,164,2.288,165,1.313,166,1.313,167,1.313,168,1.313,169,1.313,170,1.313,171,0.933,172,1.313,173,1.764,174,1.012,175,1.313,176,1.93,177,1.313,178,1.313,179,1.617,180,1.313,181,1.313,182,2.567,183,1.313,184,1.313,185,1.313,186,1.917,187,1.93,188,1.93,189,1.313,190,2.288,191,1.617,192,1.764,193,1.313,194,1.313,195,1.313,196,1.313,197,1.313,198,1.313,199,1.313,200,1.313,201,1.1,202,1.313,203,1.313,204,1.313,205,1.313,206,1.313,207,1.313,208,1.617,209,1.313,210,1.313,211,1.313,212,1.93,213,1.012,214,1.313,215,1.313,216,1.2,217,1.313,218,1.313,219,1.313,220,1.313,221,1.313,222,1.313,223,1.313,224,2.81,225,1.313,226,1.313,227,1.313,228,1.313,229,1.313,230,1.313,231,1.313,232,1.313,233,1.313,234,1.313,235,1.93,236,1.313,237,1.313,238,1.313,239,1.313,240,1.313,241,1.313,242,1.313,243,1.313,244,1.313,245,1.313,262,3.641,263,2.477]],["title/classes/AnimalQuestionService.html",[107,0.254,208,1.411]],["body/classes/AnimalQuestionService.html",[1,0.6,2,0.166,3,0.166,4,0.111,5,0.566,7,0.111,8,0.332,10,0.633,11,0.597,12,0.554,13,0.381,14,0.032,15,0.694,17,0.481,18,0.74,19,0.248,21,0.884,24,0.396,26,0.396,27,0.426,31,0.566,35,0.625,36,0.619,37,0.323,39,0.584,42,0.756,54,0.426,55,0.817,56,0.289,65,0.74,68,0.667,71,0.907,75,0.359,78,0.625,80,0.332,81,0.477,92,0.855,93,0.323,95,0.396,96,0.323,100,0.584,102,0.756,103,0.855,104,0.855,105,0.017,106,0.017,107,0.436,108,1.6,109,1.085,110,2.65,111,2.506,112,1.472,113,2.27,114,2.103,115,2.01,116,2.103,117,1.6,118,3.417,119,1.945,120,1.583,121,2.155,122,1.583,123,1.583,124,1.91,125,1.583,126,2.229,127,1.751,128,1.183,129,1.871,130,1.91,131,1.583,132,1.779,133,2.335,134,1.91,135,1.583,136,1.6,137,1.472,138,2.768,139,2.287,140,2.796,141,2.108,142,1.931,143,1.749,144,1.295,145,1.085,146,1.183,147,1.295,148,0.848,149,0.92,150,0.848,151,1.295,152,1.691,153,0.998,154,1.561,155,1.183,156,1.295,157,1.91,158,1.91,159,2.672,160,1.295,161,1.295,162,1.295,163,2.27,164,2.27,165,1.295,166,1.295,167,1.295,168,1.295,169,1.295,170,1.295,171,0.92,172,1.295,173,1.749,174,0.998,175,1.295,176,1.91,177,1.295,178,1.295,179,1.6,180,1.295,181,1.295,182,2.554,183,1.295,184,1.295,185,1.295,186,1.6,187,1.295,188,1.91,189,1.295,190,2.27,191,1.6,192,1.749,193,1.295,194,1.295,195,1.295,196,1.295,197,1.295,198,1.295,199,1.295,200,1.295,201,1.085,202,1.295,203,1.295,204,1.295,205,1.295,206,1.295,207,1.295,208,1.902,209,1.91,210,1.295,211,1.91,212,1.91,213,0.998,214,1.295,215,1.295,216,1.183,217,1.295,218,1.295,219,1.295,220,1.295,221,1.295,222,1.295,223,1.295,224,2.796,225,1.295,226,1.295,227,1.295,228,1.295,229,1.295,230,1.295,231,1.295,232,1.295,233,1.295,234,1.295,235,1.91,236,1.295,237,1.295,238,1.295,239,1.295,240,1.295,241,1.295,242,1.295,243,1.295,244,1.295,245,1.295,264,3.603,265,2.442,266,2.442]],["title/modules/AnimalSDKModule.html",[267,1.855,268,2.059]],["body/modules/AnimalSDKModule.html",[1,0.627,2,0.292,3,0.292,4,0.196,14,0.032,19,0.291,27,0.626,105,0.025,106,0.025,107,0.343,129,1.272,142,2.631,145,1.909,146,2.56,153,2.16,213,2.16,216,2.082,267,2.509,268,3.71,269,4.298,270,4.789,271,5.287,272,5.287,273,4.298,274,5.287,275,5.726,276,5.287,277,5.726,278,5.287,279,5.726,280,5.287,281,5.287,282,5.287,283,3.131,284,2.509,285,4.298,286,4.171,287,4.298]],["title/injectables/AnimalSDKService.html",[143,1.298,213,1.298]],["body/injectables/AnimalSDKService.html",[1,0.637,2,0.173,3,0.173,4,0.116,5,0.776,7,0.116,8,0.342,10,0.624,11,0.439,12,0.46,13,0.385,14,0.032,15,0.71,17,0.461,18,0.707,19,0.251,21,0.895,24,0.412,26,0.412,27,0.57,31,0.579,35,0.73,36,0.561,37,0.336,39,0.412,42,0.795,54,0.439,55,0.781,56,0.301,65,0.707,68,0.73,75,0.373,78,0.49,80,0.342,81,0.677,92,0.781,93,0.336,95,0.412,96,0.336,100,0.412,102,0.677,103,0.781,104,0.781,105,0.018,106,0.018,107,0.427,108,2.139,109,1.128,110,2.275,111,1.346,112,1.515,113,1.346,115,2.036,119,2.005,121,2.185,124,1.346,126,1.789,127,1.288,129,1.856,130,1.346,132,1.396,133,2.256,134,1.346,138,2.674,139,2.185,140,2.553,141,2.013,142,1.967,143,1.967,144,1.346,145,1.128,146,1.23,147,1.346,148,0.882,149,0.956,150,0.882,151,1.346,152,1.714,153,1.037,154,1.576,155,1.23,156,1.346,157,1.965,158,1.965,159,2.715,160,1.346,161,1.346,162,1.346,163,2.321,164,2.321,165,1.346,166,1.346,167,1.346,168,1.346,169,1.346,170,1.346,171,0.956,172,1.346,173,1.789,174,1.037,175,1.346,176,1.965,177,1.346,178,1.346,179,1.647,180,1.346,181,1.346,182,2.59,183,1.346,184,1.346,185,1.346,186,2.139,187,1.346,188,1.965,189,1.346,190,2.321,191,2.139,192,2.092,193,1.346,194,1.346,195,1.346,196,1.346,197,1.346,198,1.346,199,1.346,200,1.346,201,1.128,202,1.346,203,1.346,204,1.346,205,1.346,206,1.346,207,1.346,208,2.139,209,1.346,210,1.346,211,1.346,212,1.965,213,1.515,214,2.553,215,1.346,216,1.795,217,1.346,218,1.346,219,1.346,220,1.346,221,1.346,222,1.346,223,1.346,224,2.835,225,1.346,226,1.346,227,1.346,228,1.346,229,1.346,230,1.346,231,1.346,232,1.965,233,1.965,234,1.346,235,1.965,236,1.346,237,2.553,238,1.346,239,1.346,240,1.346,241,1.346,242,1.346,243,1.346,244,1.346,245,1.346,246,1.645,247,1.346,288,3.707,289,2.539,290,3.707,291,2.539,292,2.539,293,2.539,294,2.539,295,2.539,296,2.539,297,2.539]],["title/interfaces/AnimalSdkConfig.html",[0,0.015,27,0.376]],["body/interfaces/AnimalSdkConfig.html",[0,0.029,1,0.559,2,0.191,3,0.191,4,0.128,5,0.371,6,0.706,7,0.128,8,0.367,9,0.766,10,0.597,11,0.71,12,0.69,13,0.315,14,0.032,15,0.751,16,0.766,17,0.509,18,0.869,19,0.283,20,1.168,21,0.817,22,1.087,23,1.002,24,0.455,25,0.766,26,0.455,27,0.471,28,1.392,29,1.002,30,1.392,31,0.667,32,1.087,33,1.51,34,1.087,35,0.854,36,0.559,37,0.613,38,1.166,39,0.646,40,1.002,41,0.766,42,0.769,43,0.766,44,0.65,45,1.264,46,1.087,47,0.766,48,0.923,49,1.264,50,1.087,51,1.087,52,1.087,53,0.825,54,0.548,55,0.646,56,0.597,57,0.766,58,0.706,59,1.087,60,0.766,61,0.766,62,0.766,63,1.264,64,0.766,65,0.585,66,0.766,67,1.087,68,0.817,69,1.087,70,1.454,71,1.432,72,1.377,73,1.087,74,0.766,75,0.68,76,0.766,77,0.766,78,0.371,79,1.377,80,0.524,81,0.527,82,0.766,83,0.766,84,1.087,85,0.766,86,0.766,87,1.087,88,0.923,89,0.766,90,0.766,91,0.766,92,0.646,93,0.371,94,0.597,95,0.455,96,0.527,97,0.766,98,0.766,99,0.766,100,0.455,101,0.766,102,0.371,103,0.455,104,0.455,105,0.019,106,0.019]],["title/classes/ApiStorage.html",[107,0.254,148,1.104]],["body/classes/ApiStorage.html",[0,0.019,2,0.274,3,0.274,4,0.183,7,0.183,10,0.613,11,0.691,12,0.686,13,0.397,14,0.032,17,0.466,19,0.266,36,0.534,53,1.072,54,0.601,56,0.477,80,0.372,94,0.858,105,0.024,106,0.024,107,0.444,112,2.076,115,1.873,119,2.029,126,2.386,127,2.029,129,1.819,132,2.095,141,1.518,148,1.765,149,1.913,150,2.135,152,1.629,154,1.101,171,2.095,173,2.076,174,1.648,247,2.694,284,3.786,298,3.514,299,2.354,300,5.081,301,5.081,302,5.081,303,3.702,304,4.033,305,3.702,306,4.033,307,3.702,308,4.033,309,3.702,310,4.033,311,2.938,312,2.613,313,2.613,314,2.938,315,2.938,316,2.938,317,2.938,318,2.938,319,2.938,320,2.938,321,2.938]],["title/interfaces/AskQuestion.html",[0,0.015,78,0.42]],["body/interfaces/AskQuestion.html",[0,0.029,1,0.557,2,0.189,3,0.189,4,0.127,5,0.368,6,0.701,7,0.127,8,0.365,9,0.76,10,0.596,11,0.736,12,0.693,13,0.342,14,0.032,15,0.748,16,0.76,17,0.509,18,0.867,19,0.283,20,0.918,21,0.748,22,1.082,23,0.997,24,0.451,25,0.76,26,0.451,27,0.33,28,0.997,29,0.701,30,1.265,31,0.524,32,0.76,33,1.082,34,0.76,35,0.854,36,0.557,37,0.61,38,1.161,39,0.642,40,0.997,41,0.76,42,0.768,43,0.76,44,0.645,45,1.26,46,1.082,47,0.76,48,0.918,49,1.26,50,1.082,51,1.082,52,1.082,53,0.822,54,0.546,55,0.642,56,0.595,57,0.76,58,0.701,59,1.082,60,0.76,61,0.76,62,0.76,63,1.26,64,0.76,65,0.582,66,0.76,67,1.082,68,0.832,69,1.26,70,1.55,71,1.507,72,1.585,73,1.45,74,0.76,75,0.677,76,0.76,77,0.76,78,0.524,79,1.372,80,0.523,81,0.524,82,0.76,83,0.76,84,1.082,85,0.76,86,0.76,87,1.082,88,0.918,89,0.76,90,0.76,91,0.76,92,0.642,93,0.368,94,0.593,95,0.451,96,0.524,97,0.76,98,0.76,99,0.76,100,0.451,101,0.76,102,0.368,103,0.451,104,0.451,105,0.019,106,0.019]],["title/interfaces/BasicMonth.html",[0,0.015,96,0.42]],["body/interfaces/BasicMonth.html",[0,0.029,1,0.556,2,0.188,3,0.188,4,0.126,5,0.365,6,0.695,7,0.126,8,0.363,9,0.754,10,0.628,11,0.708,12,0.689,13,0.36,14,0.032,15,0.744,16,0.754,17,0.52,18,0.878,19,0.282,20,0.913,21,0.744,22,1.076,23,0.992,24,0.448,25,0.754,26,0.448,27,0.327,28,0.992,29,0.695,30,1.26,31,0.521,32,0.754,33,1.076,34,0.754,35,0.863,36,0.556,37,0.7,38,1.156,39,0.639,40,0.992,41,0.754,42,0.8,43,0.754,44,0.64,45,1.254,46,1.076,47,0.754,48,0.913,49,1.367,50,1.076,51,1.076,52,1.254,53,0.892,54,0.651,55,0.639,56,0.593,57,0.754,58,0.695,59,1.076,60,0.754,61,0.754,62,0.754,63,1.367,64,0.754,65,0.579,66,0.754,67,1.076,68,0.815,69,1.076,70,1.445,71,1.426,72,1.367,73,1.076,74,0.754,75,0.674,76,0.754,77,0.754,78,0.365,79,1.367,80,0.522,81,0.521,82,0.754,83,0.754,84,1.076,85,0.754,86,0.754,87,1.076,88,0.913,89,0.754,90,0.754,91,0.754,92,0.639,93,0.365,94,0.588,95,0.448,96,0.607,97,1.076,98,1.076,99,0.754,100,0.448,101,0.754,102,0.365,103,0.448,104,0.448,105,0.019,106,0.019]],["title/interfaces/BasicPage.html",[0,0.015,37,0.42]],["body/interfaces/BasicPage.html",[0,0.029,1,0.549,2,0.182,3,0.182,4,0.122,5,0.354,6,0.673,7,0.122,8,0.355,9,0.73,10,0.623,11,0.702,12,0.695,13,0.403,14,0.032,15,0.731,16,0.73,17,0.51,18,0.872,19,0.281,20,0.891,21,0.731,22,1.051,23,0.969,24,0.433,25,0.73,26,0.433,27,0.316,28,0.969,29,0.673,30,1.241,31,0.509,32,0.73,33,1.051,34,0.73,35,0.865,36,0.549,37,0.652,38,1.412,39,0.882,40,1.37,41,1.051,42,0.773,43,1.347,44,0.891,45,1.347,46,1.231,47,1.347,48,1.143,49,1.427,50,1.231,51,1.427,52,1.231,53,0.879,54,0.644,55,0.624,56,0.584,57,0.73,58,0.673,59,1.051,60,0.73,61,0.73,62,0.73,63,1.231,64,0.73,65,0.565,66,0.73,67,1.051,68,0.81,69,1.051,70,1.427,71,1.412,72,1.347,73,1.051,74,0.73,75,0.662,76,0.73,77,0.73,78,0.354,79,1.347,80,0.517,81,0.509,82,0.73,83,0.73,84,1.051,85,0.73,86,0.73,87,1.051,88,0.891,89,0.73,90,0.73,91,0.73,92,0.624,93,0.354,94,0.569,95,0.433,96,0.509,97,0.73,98,0.73,99,0.73,100,0.433,101,0.73,102,0.354,103,0.433,104,0.433,105,0.018,106,0.018]],["title/interfaces/MenuItem.html",[0,0.015,81,0.42]],["body/interfaces/MenuItem.html",[0,0.029,1,0.555,2,0.187,3,0.187,4,0.125,5,0.365,6,0.694,7,0.125,8,0.363,9,0.753,10,0.627,11,0.734,12,0.689,13,0.36,14,0.032,15,0.744,16,0.753,17,0.517,18,0.888,19,0.282,20,0.912,21,0.744,22,1.074,23,0.99,24,0.447,25,0.753,26,0.447,27,0.326,28,0.99,29,0.694,30,1.259,31,0.521,32,0.753,33,1.074,34,0.753,35,0.855,36,0.555,37,0.607,38,1.155,39,0.638,40,0.99,41,0.753,42,0.766,43,0.753,44,0.639,45,1.253,46,1.074,47,0.753,48,0.912,49,1.253,50,1.074,51,1.074,52,1.074,53,0.817,54,0.543,55,0.638,56,0.592,57,0.753,58,0.694,59,1.074,60,0.753,61,0.753,62,0.753,63,1.253,64,0.753,65,0.578,66,0.753,67,1.074,68,0.815,69,1.074,70,1.444,71,1.425,72,1.366,73,1.074,74,0.753,75,0.674,76,0.753,77,0.753,78,0.365,79,1.546,80,0.551,81,0.662,82,1.074,83,1.366,84,1.502,85,1.074,86,1.074,87,1.074,88,0.912,89,0.753,90,0.753,91,0.753,92,0.638,93,0.365,94,0.587,95,0.447,96,0.521,97,0.753,98,0.753,99,0.753,100,0.447,101,0.753,102,0.365,103,0.447,104,0.447,105,0.019,106,0.019]],["title/interfaces/Month.html",[0,0.015,42,0.42]],["body/interfaces/Month.html",[0,0.029,1,0.581,2,0.191,3,0.191,4,0.128,5,0.371,6,0.706,7,0.128,8,0.367,9,0.766,10,0.597,11,0.736,12,0.69,13,0.315,14,0.032,15,0.751,16,0.766,17,0.513,18,0.881,19,0.283,20,0.923,21,0.751,22,1.087,23,1.002,24,0.455,25,0.766,26,0.455,27,0.332,28,1.002,29,0.706,30,1.269,31,0.527,32,0.766,33,1.087,34,0.766,35,0.857,36,0.559,37,0.613,38,1.269,39,0.646,40,1.002,41,0.766,42,0.803,43,0.766,44,0.65,45,1.264,46,1.087,47,0.766,48,0.923,49,1.264,50,1.087,51,1.087,52,1.087,53,0.825,54,0.548,55,0.751,56,0.597,57,0.766,58,0.706,59,1.087,60,0.766,61,0.766,62,0.766,63,1.264,64,0.766,65,0.585,66,0.766,67,1.087,68,0.817,69,1.087,70,1.454,71,1.432,72,1.377,73,1.087,74,0.766,75,0.68,76,0.766,77,0.766,78,0.371,79,1.377,80,0.524,81,0.527,82,0.766,83,0.766,84,1.087,85,0.766,86,0.766,87,1.087,88,0.923,89,0.766,90,0.766,91,0.766,92,0.646,93,0.371,94,0.597,95,0.455,96,0.613,97,0.766,98,0.766,99,1.087,100,0.817,101,0.766,102,0.371,103,0.455,104,0.455,105,0.019,106,0.019]],["title/interfaces/Page.html",[0,0.015,35,0.42]],["body/interfaces/Page.html",[0,0.029,1,0.556,2,0.188,3,0.188,4,0.126,5,0.366,6,0.697,7,0.126,8,0.364,9,0.756,10,0.595,11,0.708,12,0.692,13,0.341,14,0.032,15,0.745,16,0.756,17,0.509,18,0.866,19,0.282,20,0.914,21,0.745,22,1.077,23,0.993,24,0.449,25,0.756,26,0.449,27,0.328,28,0.993,29,0.697,30,1.261,31,0.522,32,0.756,33,1.077,34,0.756,35,0.861,36,0.556,37,0.663,38,1.157,39,0.64,40,0.993,41,0.756,42,0.766,43,0.756,44,0.641,45,1.255,46,1.255,47,0.756,48,0.914,49,1.255,50,1.077,51,1.077,52,1.077,53,0.819,54,0.544,55,0.745,56,0.686,57,1.077,58,0.993,59,1.368,60,1.077,61,1.368,62,1.077,63,1.368,64,1.368,65,0.579,66,0.756,67,1.077,68,0.815,69,1.077,70,1.446,71,1.426,72,1.368,73,1.077,74,0.756,75,0.675,76,0.756,77,0.756,78,0.366,79,1.368,80,0.522,81,0.522,82,0.756,83,0.756,84,1.077,85,0.756,86,0.756,87,1.077,88,0.914,89,0.756,90,0.756,91,0.756,92,0.64,93,0.366,94,0.589,95,0.449,96,0.522,97,0.756,98,0.756,99,0.756,100,0.449,101,0.756,102,0.366,103,0.449,104,0.449,105,0.019,106,0.019,127,1.74]],["title/interfaces/PageImage.html",[0,0.015,48,0.736]],["body/interfaces/PageImage.html",[0,0.029,1,0.558,2,0.19,3,0.19,4,0.127,5,0.37,6,0.704,7,0.127,8,0.366,9,0.764,10,0.629,11,0.709,12,0.691,13,0.342,14,0.032,15,0.75,16,0.764,17,0.513,18,0.88,19,0.283,20,0.921,21,0.75,22,1.085,23,1,24,0.453,25,0.764,26,0.453,27,0.331,28,1,29,0.704,30,1.267,31,0.526,32,0.764,33,1.085,34,0.764,35,0.854,36,0.558,37,0.612,38,1.164,39,0.644,40,1,41,0.764,42,0.769,43,0.764,44,0.648,45,1.452,46,1.085,47,0.764,48,1.071,49,1.263,50,1.085,51,1.085,52,1.085,53,0.824,54,0.547,55,0.644,56,0.596,57,0.764,58,0.704,59,1.085,60,0.764,61,0.764,62,0.764,63,1.263,64,0.764,65,0.812,66,1.085,67,1.509,68,0.817,69,1.085,70,1.452,71,1.431,72,1.375,73,1.085,74,0.764,75,0.679,76,0.764,77,0.764,78,0.37,79,1.375,80,0.524,81,0.526,82,0.764,83,0.764,84,1.085,85,0.764,86,0.764,87,1.085,88,0.921,89,0.764,90,0.764,91,0.764,92,0.644,93,0.37,94,0.595,95,0.453,96,0.526,97,0.764,98,0.764,99,0.764,100,0.453,101,0.764,102,0.37,103,0.453,104,0.453,105,0.019,106,0.019]],["title/interfaces/PagingInfo.html",[0,0.015,93,0.42]],["body/interfaces/PagingInfo.html",[0,0.029,1,0.56,2,0.191,3,0.191,4,0.128,5,0.372,6,0.708,7,0.128,8,0.368,9,0.769,10,0.598,11,0.71,12,0.688,13,0.315,14,0.032,15,0.752,16,0.769,17,0.51,18,0.869,19,0.283,20,0.925,21,0.752,22,1.09,23,1.005,24,0.456,25,0.769,26,0.456,27,0.333,28,1.005,29,0.708,30,1.342,31,0.528,32,0.769,33,1.09,34,0.769,35,0.859,36,0.56,37,0.614,38,1.168,39,0.647,40,1.005,41,0.769,42,0.77,43,0.769,44,0.652,45,1.267,46,1.09,47,0.769,48,0.925,49,1.267,50,1.09,51,1.09,52,1.09,53,0.827,54,0.549,55,0.647,56,0.598,57,0.769,58,0.708,59,1.09,60,0.769,61,0.769,62,0.769,63,1.379,64,0.769,65,0.586,66,0.769,67,1.09,68,0.818,69,1.09,70,1.456,71,1.433,72,1.379,73,1.09,74,0.769,75,0.681,76,0.769,77,0.769,78,0.372,79,1.379,80,0.56,81,0.528,82,0.769,83,0.769,84,1.09,85,0.769,86,0.769,87,1.267,88,1.17,89,0.769,90,0.769,91,0.769,92,0.647,93,0.528,94,0.987,95,0.819,96,0.528,97,0.769,98,0.769,99,0.769,100,0.456,101,0.769,102,0.372,103,0.456,104,0.456,105,0.019,106,0.019]],["title/interfaces/PagingMeta.html",[0,0.015,88,0.736]],["body/interfaces/PagingMeta.html",[0,0.029,1,0.559,2,0.19,3,0.19,4,0.127,5,0.371,6,0.705,7,0.127,8,0.367,9,0.765,10,0.597,11,0.71,12,0.688,13,0.315,14,0.032,15,0.75,16,0.765,17,0.518,18,0.868,19,0.283,20,0.922,21,0.75,22,1.087,23,1.002,24,0.454,25,0.765,26,0.454,27,0.332,28,1.002,29,0.705,30,1.34,31,0.526,32,0.765,33,1.087,34,0.765,35,0.858,36,0.581,37,0.612,38,1.165,39,0.75,40,1.002,41,0.765,42,0.769,43,0.765,44,0.649,45,1.264,46,1.087,47,0.765,48,0.922,49,1.264,50,1.087,51,1.087,52,1.087,53,0.824,54,0.548,55,0.645,56,0.596,57,0.765,58,0.705,59,1.087,60,0.765,61,0.765,62,0.765,63,1.264,64,0.765,65,0.584,66,0.765,67,1.087,68,0.817,69,1.087,70,1.453,71,1.432,72,1.376,73,1.087,74,0.765,75,0.68,76,0.765,77,0.765,78,0.371,79,1.376,80,0.536,81,0.526,82,0.765,83,0.765,84,1.087,85,0.765,86,0.765,87,1.264,88,1.072,89,1.087,90,1.376,91,1.087,92,0.863,93,0.371,94,0.596,95,0.454,96,0.526,97,0.765,98,0.765,99,0.765,100,0.454,101,0.765,102,0.371,103,0.454,104,0.454,105,0.019,106,0.019]],["title/interfaces/Question.html",[0,0.015,68,0.42]],["body/interfaces/Question.html",[0,0.029,1,0.546,2,0.18,3,0.18,4,0.12,5,0.35,6,0.665,7,0.12,8,0.352,9,0.722,10,0.63,11,0.729,12,0.696,13,0.403,14,0.032,15,0.844,16,0.722,17,0.513,18,0.869,19,0.28,20,0.884,21,0.726,22,1.042,23,0.961,24,0.429,25,0.722,26,0.429,27,0.313,28,0.961,29,0.665,30,1.235,31,0.505,32,0.722,33,1.042,34,0.722,35,0.849,36,0.546,37,0.593,38,1.128,39,0.619,40,0.961,41,0.722,42,0.757,43,0.722,44,0.612,45,1.224,46,1.042,47,0.722,48,0.884,49,1.224,50,1.224,51,1.421,52,1.042,53,0.874,54,0.642,55,0.619,56,0.677,57,0.722,58,0.665,59,1.042,60,0.722,61,0.722,62,0.722,63,1.224,64,0.722,65,0.561,66,0.722,67,1.042,68,0.847,69,1.224,70,1.563,71,1.509,72,1.563,73,1.421,74,1.042,75,0.841,76,1.042,77,1.34,78,0.35,79,1.34,80,0.515,81,0.505,82,0.722,83,0.722,84,1.042,85,0.722,86,0.722,87,1.042,88,0.884,89,0.722,90,0.722,91,0.722,92,0.619,93,0.35,94,0.563,95,0.429,96,0.505,97,0.722,98,0.722,99,0.722,100,0.429,101,0.722,102,0.35,103,0.429,104,0.429,105,0.018,106,0.018]],["title/classes/Queue.html",[107,0.254,322,1.855]],["body/classes/Queue.html",[2,0.252,3,0.252,4,0.169,7,0.169,8,0.444,11,0.57,13,0.409,14,0.032,17,0.521,19,0.219,44,1.116,80,0.444,105,0.023,106,0.023,107,0.427,112,1.968,115,1.715,117,1.648,119,2.156,126,1.968,127,1.673,128,1.796,129,1.78,133,2.313,136,2.376,137,2.313,139,1.515,152,1.189,154,1.461,179,1.648,192,2.185,201,2.139,246,2.403,247,2.836,322,2.811,323,2.702,324,4.735,325,4.735,326,4.735,327,5.029,328,4.735,329,4.816,330,4.735,331,4.028,332,4.735,333,4.816,334,3.709,335,4.124,336,3.709,337,3.709,338,3.709,339,4.028,340,3.709,341,4.735,342,3.709,343,4.028,344,2.403,345,4.028,346,4.028,347,3.102,348,4.028,349,4.028,350,3.102,351,3.102,352,3.102,353,3.102,354,3.102,355,3.102,356,2.702,357,4.735,358,4.907,359,3.509,360,3.102,361,3.102,362,3.102,363,3.102,364,3.102,365,3.102,366,4.028,367,3.102,368,3.102,369,2.702]],["title/classes/QueueEntry.html",[107,0.254,344,2.059]],["body/classes/QueueEntry.html",[2,0.277,3,0.277,4,0.185,7,0.185,8,0.471,13,0.38,14,0.032,17,0.468,19,0.233,44,0.944,80,0.471,105,0.024,106,0.024,107,0.446,115,1.307,117,2.737,119,1.942,129,1.735,133,2.284,137,1.665,139,1.665,152,1.307,154,1.397,179,1.81,192,1.665,201,2.272,247,2.711,322,2.378,323,2.969,324,3.408,325,3.408,326,3.408,327,4.277,328,3.408,330,3.408,331,3.408,332,4.277,335,3.726,339,3.408,341,5.154,343,3.408,344,3.314,345,5.05,346,5.05,347,3.408,348,4.277,349,4.277,350,3.408,351,3.408,352,3.408,353,3.408,354,3.408,355,3.408,356,2.969,357,4.903,358,5.05,359,3.726,360,3.408,361,3.408,362,3.408,363,3.408,364,3.408,365,3.408,366,4.277,367,3.408,368,3.408,369,2.969,370,4.075,371,4.075,372,4.075]],["title/classes/RailsApiClient.html",[107,0.254,121,1.298]],["body/classes/RailsApiClient.html",[2,0.176,3,0.176,4,0.118,7,0.118,8,0.346,10,0.597,11,0.657,12,0.692,13,0.41,14,0.032,17,0.43,19,0.118,28,1.354,31,0.806,36,0.542,40,0.651,65,0.65,75,0.38,105,0.018,106,0.018,107,0.3,112,2.269,115,2.054,117,1.668,119,2.096,121,1.535,126,2.269,127,1.929,128,1.252,129,1.884,132,1.414,133,1.535,136,2.157,137,2.324,138,2.689,141,2.356,142,1.056,152,1.824,154,1.026,171,0.973,182,1.252,192,2.198,246,1.675,247,2.345,284,3.141,322,3.141,356,2.736,359,2.736,369,2.736,373,5.093,374,2.162,375,4.856,376,4.856,377,3.756,378,3.756,379,3.756,380,5.552,381,3.756,382,3.756,383,3.756,384,3.756,385,2.585,386,2.585,387,2.585,388,2.585,389,3.756,390,2.585,391,3.756,392,2.585,393,3.756,394,4.424,395,2.585,396,3.756,397,2.585,398,2.585,399,3.756,400,3.756,401,2.585,402,3.756,403,3.756,404,2.585,405,5.158,406,3.756,407,3.756,408,2.585,409,5.158,410,4.856,411,2.585,412,3.756,413,3.756,414,2.585,415,3.756,416,3.756,417,5.688,418,4.424,419,4.424,420,3.756,421,2.585,422,2.585,423,2.585,424,2.585,425,3.756,426,3.756,427,2.585,428,2.585,429,2.585,430,2.585,431,2.585,432,2.585,433,2.585,434,2.585,435,2.585,436,2.585,437,4.424,438,5.158,439,3.756,440,3.756,441,2.585,442,4.424,443,2.585,444,2.585,445,2.585,446,2.585,447,2.585,448,2.585,449,2.585,450,2.585,451,2.585,452,2.585,453,2.585,454,2.585,455,2.585,456,2.585,457,2.585,458,3.756,459,2.585,460,2.585]],["title/classes/StorageItem.html",[107,0.254,150,1.104]],["body/classes/StorageItem.html",[0,0.02,2,0.294,3,0.294,4,0.197,7,0.197,8,0.489,10,0.557,12,0.677,13,0.39,14,0.032,17,0.424,19,0.272,36,0.454,53,0.945,54,0.727,56,0.708,80,0.552,94,1.221,105,0.025,106,0.025,107,0.458,115,1.919,119,1.994,129,1.57,132,1.627,141,1.627,148,1.501,149,2.253,150,2.079,152,1.701,154,1.18,171,1.627,173,2.167,174,1.766,284,3.493,298,3.493,299,2.523,303,3.148,305,3.148,307,3.148,309,3.148,311,3.148,312,2.8,313,2.8,314,3.148,315,3.148,316,3.148,317,3.148,318,3.148,319,3.148,320,3.148,321,3.148,461,4.322,462,4.322,463,4.322]],["title/interfaces/Updatable.html",[0,0.015,53,0.566]],["body/interfaces/Updatable.html",[0,0.025,2,0.298,3,0.298,4,0.199,7,0.199,8,0.493,10,0.647,12,0.685,13,0.392,14,0.032,17,0.48,19,0.273,36,0.631,53,1.028,54,0.73,56,0.518,80,0.403,94,0.931,105,0.025,106,0.025,107,0.427,115,1.927,129,1.582,132,1.648,141,1.648,148,1.52,149,2.012,150,2.005,152,1.714,154,1.195,171,1.648,173,2.184,174,1.788,284,3.508,298,2.554,299,2.554,303,3.188,305,3.188,307,3.188,309,3.188,311,3.188,312,2.836,313,2.836,314,3.188,315,3.188,316,3.188,317,3.188,318,3.188,319,3.188,320,3.188,321,3.188]],["title/interfaces/UrlParams.html",[0,0.015,102,0.42]],["body/interfaces/UrlParams.html",[0,0.029,1,0.558,2,0.19,3,0.19,4,0.127,5,0.37,6,0.704,7,0.127,8,0.366,9,0.764,10,0.597,11,0.709,12,0.69,13,0.342,14,0.032,15,0.75,16,0.764,17,0.516,18,0.868,19,0.283,20,0.921,21,0.75,22,1.085,23,1,24,0.453,25,0.764,26,0.453,27,0.331,28,1,29,0.704,30,1.267,31,0.526,32,0.764,33,1.085,34,0.764,35,0.854,36,0.558,37,0.612,38,1.164,39,0.644,40,1,41,0.764,42,0.769,43,0.764,44,0.648,45,1.263,46,1.085,47,0.764,48,0.921,49,1.263,50,1.085,51,1.085,52,1.085,53,0.824,54,0.547,55,0.644,56,0.596,57,0.764,58,0.704,59,1.085,60,0.764,61,0.764,62,0.764,63,1.263,64,0.764,65,0.584,66,0.764,67,1.085,68,0.817,69,1.085,70,1.452,71,1.431,72,1.375,73,1.085,74,0.764,75,0.679,76,0.764,77,0.764,78,0.37,79,1.375,80,0.524,81,0.526,82,0.764,83,0.764,84,1.085,85,0.764,86,0.764,87,1.085,88,0.921,89,0.764,90,0.764,91,0.764,92,0.862,93,0.37,94,0.595,95,0.453,96,0.526,97,0.764,98,0.764,99,0.764,100,0.453,101,0.764,102,0.526,103,0.816,104,0.816,105,0.019,106,0.019,127,1.919]],["title/coverage.html",[464,3.633]],["body/coverage.html",[0,0.03,1,0.413,4,0.179,5,0.877,6,1.641,13,0.268,14,0.032,18,0.578,20,0.912,27,0.466,31,0.521,35,0.521,37,0.521,42,0.521,48,0.912,53,0.701,68,0.521,78,0.521,81,0.521,88,0.912,93,0.521,96,0.521,102,0.521,105,0.024,106,0.024,107,0.51,108,1.749,109,2.757,110,1.749,121,1.608,143,1.608,148,1.367,150,1.367,153,1.608,154,1.075,186,1.749,191,1.749,208,1.749,213,1.608,298,3.211,299,3.211,322,2.298,323,3.646,335,4.576,344,2.551,373,3.293,374,3.293,464,3.293,465,3.937,466,3.937,467,5.789,468,5.789,469,5.789,470,5.789,471,5.004,472,5.004,473,3.937,474,3.937,475,3.937,476,3.937,477,3.937,478,3.937,479,5.789,480,3.937,481,3.937,482,5.004,483,5.004,484,3.937,485,3.937,486,3.937,487,3.937,488,3.293,489,3.937,490,2.868,491,3.937,492,3.937,493,3.937,494,3.937,495,3.937,496,3.937]],["title/miscellaneous/enumerations.html",[497,1.717,498,3.198]],["body/miscellaneous/enumerations.html",[7,0.234,14,0.028,105,0.028,106,0.028,149,2.212,298,2.997,299,3.429,312,3.327,313,3.327,497,3.327,498,4.294,499,5.135]],["title/index.html",[7,0.121,500,2.65,501,2.65]],["body/index.html",[1,0.634,4,0.245,14,0.032,19,0.202,23,1.356,29,1.461,30,1.115,38,1.115,58,1.115,105,0.026,106,0.026,107,0.354,142,2.644,145,1.969,268,3.49,270,4.505,283,3.228,286,3.228,502,6.037,503,6.366,504,6.037,505,6.186,506,4.432,507,5.387,508,5.803,509,4.432,510,5.387,511,5.387,512,4.432,513,4.432,514,5.803,515,4.432,516,4.432,517,3.706,518,4.432,519,4.432,520,4.432,521,4.432,522,4.432,523,4.432,524,4.432,525,4.432,526,4.432,527,4.432,528,4.432,529,4.432,530,4.432,531,4.432,532,4.432]],["title/modules.html",[267,2.536]],["body/modules.html",[14,0.028,105,0.028,106,0.028,267,3.027,268,3.36,533,5.186,534,5.186,535,5.186]],["title/overview.html",[536,3.633]],["body/overview.html",[0,0.023,14,0.028,19,0.23,105,0.028,106,0.028,107,0.404,139,2.38,143,2.067,267,3.401,283,3.686,286,3.686,488,4.232,517,4.232,536,4.232,537,5.06,538,5.06,539,5.826,540,5.06,541,5.06,542,5.06]],["title/miscellaneous/variables.html",[490,2.786,497,1.717]],["body/miscellaneous/variables.html",[5,0.675,7,0.232,14,0.029,105,0.028,106,0.028,109,2.6,136,2.266,137,2.084,153,2.515,154,1.393,155,2.471,490,3.716,497,3.306,543,5.101]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":335,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["0/1",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":139,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"overview.html":{}}}],["1/10",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":488,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":197,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["15",{"_index":542,"title":{},"body":{"overview.html":{}}}],["2/3",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":140,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["200",{"_index":459,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["22",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["_concurr",{"_index":324,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_idcount",{"_index":325,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_queue",{"_index":326,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["accesstoken",{"_index":375,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["add",{"_index":329,"title":{},"body":{"classes/Queue.html":{}}}],["add(promisegener",{"_index":339,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["angular",{"_index":508,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":273,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["angular/cor",{"_index":145,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"index.html":{}}}],["angular/platform",{"_index":512,"title":{},"body":{"index.html":{}}}],["anim",{"_index":1,"title":{"interfaces/Animal.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["animalapicredenti",{"_index":20,"title":{"interfaces/AnimalApiCredentials.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalgen",{"_index":111,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalgener",{"_index":157,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalid",{"_index":100,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["animalmenuitemservic",{"_index":108,"title":{"classes/AnimalMenuItemService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmenuitemservice(this.cli",{"_index":228,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalmodelservic",{"_index":110,"title":{"classes/AnimalModelService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmodelservice:12",{"_index":122,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:13",{"_index":123,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:14",{"_index":120,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:25",{"_index":135,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:40",{"_index":131,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmodelservice:54",{"_index":125,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["animalmonthservic",{"_index":191,"title":{"classes/AnimalMonthService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalmonthservice(this.cli",{"_index":226,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalpageservic",{"_index":186,"title":{"classes/AnimalPageService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalpageservice(this.cli",{"_index":223,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalquestionservic",{"_index":208,"title":{"classes/AnimalQuestionService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["animalquestionservice(this.cli",{"_index":231,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["animalsdkconfig",{"_index":27,"title":{"interfaces/AnimalSdkConfig.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalsdkconfigservic",{"_index":153,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animalsdkmodul",{"_index":268,"title":{"modules/AnimalSDKModule.html":{}},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"modules.html":{}}}],["animalsdkservic",{"_index":213,"title":{"injectables/AnimalSDKService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{}}}],["answer",{"_index":74,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["api",{"_index":31,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["apistorag",{"_index":148,"title":{"classes/ApiStorage.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["apistorage.get(key",{"_index":174,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.getkey(this.model",{"_index":172,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apistorage.getkey(updatable.model",{"_index":319,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.process(res[camelmodel].map(p",{"_index":166,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apistorage.set(key",{"_index":183,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["apivers",{"_index":394,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["app.compon",{"_index":515,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":514,"title":{},"body":{"index.html":{}}}],["applic",{"_index":23,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["application/json",{"_index":428,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["appmodul",{"_index":510,"title":{},"body":{"index.html":{}}}],["array",{"_index":44,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"interfaces/UrlParams.html":{}}}],["array.isarray(obj",{"_index":414,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["asc",{"_index":207,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["ask",{"_index":71,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalQuestionService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["ask(quest",{"_index":211,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["askquest",{"_index":78,"title":{"interfaces/AskQuestion.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["associ",{"_index":46,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["avail",{"_index":534,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":86,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["baseapiurl",{"_index":431,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["basic",{"_index":97,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["basicmonth",{"_index":96,"title":{"interfaces/BasicMonth.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["basicpag",{"_index":37,"title":{"interfaces/BasicPage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["bearer",{"_index":430,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["bodi",{"_index":40,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["bootstrap",{"_index":517,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brows",{"_index":535,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":513,"title":{},"body":{"index.html":{}}}],["browsermodul",{"_index":511,"title":{},"body":{"index.html":{}}}],["buildanimalurl",{"_index":114,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["buildanimalurl(animalid",{"_index":124,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["buildresourc",{"_index":377,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildresource(url",{"_index":391,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildto",{"_index":526,"title":{},"body":{"index.html":{}}}],["buildurl",{"_index":378,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildurl(model",{"_index":393,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cach",{"_index":178,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["call",{"_index":32,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["callapi",{"_index":379,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["callapi(url",{"_index":396,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson",{"_index":453,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson._r",{"_index":455,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["camelmodel",{"_index":161,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["case",{"_index":457,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["catch",{"_index":367,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["catch(err",{"_index":365,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["class",{"_index":107,"title":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["client",{"_index":21,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["client.t",{"_index":374,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["client.ts:36",{"_index":408,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:4",{"_index":387,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:5",{"_index":388,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:52",{"_index":385,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:58",{"_index":401,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:6",{"_index":386,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:63",{"_index":398,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:7",{"_index":390,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:75",{"_index":395,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:80",{"_index":392,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:84",{"_index":397,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:9",{"_index":404,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client_credenti",{"_index":244,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["clientid",{"_index":24,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["clientsecret",{"_index":26,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["commonmodul",{"_index":272,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["compon",{"_index":518,"title":{},"body":{"index.html":{}}}],["conceivedon",{"_index":9,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["concurr",{"_index":332,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["config",{"_index":216,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{}}}],["connect",{"_index":34,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["console.log('connect",{"_index":217,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log('curr",{"_index":236,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log('log",{"_index":240,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log(`${fullurl",{"_index":451,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["console.log(`fetch",{"_index":181,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["console.log(`return",{"_index":177,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["const",{"_index":152,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["constructor",{"_index":246,"title":{},"body":{"classes/AnimalModelService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["constructor(@inject(animalsdkconfigservic",{"_index":215,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["constructor(cli",{"_index":156,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["constructor(config",{"_index":289,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["constructor(domain",{"_index":384,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["constructor(maxqueu",{"_index":331,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["content",{"_index":427,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["continu",{"_index":420,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["coverag",{"_index":464,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":50,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["createdat",{"_index":51,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["credient",{"_index":33,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["current",{"_index":254,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["currentanim",{"_index":214,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d",{"_index":415,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["d.t",{"_index":524,"title":{},"body":{"index.html":{}}}],["d1",{"_index":261,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["d1.getfullyear",{"_index":196,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d1.getmonth",{"_index":198,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2",{"_index":194,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2.getfullyear",{"_index":195,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["d2.getmonth",{"_index":199,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["date",{"_index":15,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["date(storedobj.updatedat",{"_index":321,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["date(this.animalgen().conceivedon",{"_index":203,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["declar",{"_index":283,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":136,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":119,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}}}],["depend",{"_index":537,"title":{},"body":{"overview.html":{}}}],["dequeu",{"_index":330,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["descript",{"_index":39,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["develop",{"_index":521,"title":{},"body":{"index.html":{}}}],["direct",{"_index":519,"title":{},"body":{"index.html":{}}}],["document",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":28,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["draft",{"_index":57,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["email",{"_index":72,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["enum",{"_index":311,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["enumer",{"_index":498,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":368,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["error('queu",{"_index":352,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":55,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["fals",{"_index":359,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["fetch(fullurl",{"_index":448,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":67,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["filter(v",{"_index":445,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["forroot(config",{"_index":285,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["full",{"_index":69,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["fullurl",{"_index":438,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["function",{"_index":117,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["gener",{"_index":522,"title":{},"body":{"index.html":{}}}],["get",{"_index":500,"title":{"index.html":{}},"body":{}}],["get(id",{"_index":130,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["get(key",{"_index":303,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["getal",{"_index":116,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["getall(param",{"_index":134,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallansw",{"_index":264,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["getallanswered(param",{"_index":209,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallord",{"_index":255,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["getallordered(param",{"_index":205,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getallpublish",{"_index":262,"title":{},"body":{"classes/AnimalPageService.html":{}}}],["getallpublished(param",{"_index":187,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getanim",{"_index":288,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["getanimal(id",{"_index":233,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["getkey",{"_index":300,"title":{},"body":{"classes/ApiStorage.html":{}}}],["getkey(model",{"_index":305,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["go",{"_index":82,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["granttyp",{"_index":243,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["graph",{"_index":533,"title":{},"body":{"modules.html":{}}}],["header",{"_index":380,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headers['author",{"_index":429,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headersinit",{"_index":399,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["identifi",{"_index":18,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["imag",{"_index":45,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["image'",{"_index":66,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["imageurl",{"_index":47,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["import",{"_index":142,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["inform",{"_index":63,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["inherit",{"_index":118,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{}}}],["inject",{"_index":143,"title":{"injectables/AnimalSDKService.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":144,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["injectiontoken('animalsdkconfig",{"_index":155,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"miscellaneous/variables.html":{}}}],["instal",{"_index":502,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":312,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["isauth",{"_index":376,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["item",{"_index":80,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["item.reject(err",{"_index":366,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["item.resolve(valu",{"_index":364,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["js",{"_index":523,"title":{},"body":{"index.html":{}}}],["json",{"_index":182,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":317,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(object",{"_index":316,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(param",{"_index":447,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["json.updatedat",{"_index":184,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["jsonbodi",{"_index":437,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k",{"_index":412,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k[1].touppercas",{"_index":413,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["key",{"_index":171,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["key}=${params[key",{"_index":444,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["last",{"_index":52,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["legend",{"_index":538,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":503,"title":{},"body":{"index.html":{}}}],["limit",{"_index":353,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["link",{"_index":59,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["lint",{"_index":527,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":529,"title":{},"body":{"index.html":{}}}],["liter",{"_index":407,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["localstorage.setitem(key",{"_index":315,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["log",{"_index":41,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["login",{"_index":237,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["mata",{"_index":532,"title":{},"body":{"index.html":{}}}],["match",{"_index":106,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxqueu",{"_index":327,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["menu",{"_index":79,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["menu_item",{"_index":229,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["menuitem",{"_index":81,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["meta",{"_index":95,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["metadata.json",{"_index":525,"title":{},"body":{"index.html":{}}}],["method",{"_index":112,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["miscellan",{"_index":497,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":530,"title":{},"body":{"index.html":{}}}],["model",{"_index":36,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["model}${id",{"_index":314,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["modul",{"_index":267,"title":{"modules/AnimalSDKModule.html":{},"modules.html":{}},"body":{"modules/AnimalSDKModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":271,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["month",{"_index":42,"title":{"interfaces/Month.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["monthdiff",{"_index":256,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["monthdiff(d1",{"_index":193,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["more",{"_index":62,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["moreinfourl",{"_index":64,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["new",{"_index":154,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newobj",{"_index":409,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.replace(/(\\_\\w)/g",{"_index":422,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.split(/(?=[a",{"_index":418,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["ngmodul",{"_index":270,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{}}}],["nichola",{"_index":531,"title":{},"body":{"index.html":{}}}],["nil",{"_index":210,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["npm",{"_index":505,"title":{},"body":{"index.html":{}}}],["null",{"_index":141,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["null).join",{"_index":446,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["number",{"_index":17,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["oauth",{"_index":22,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["oauth/token",{"_index":239,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["obj",{"_index":405,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.hasownproperty(d",{"_index":416,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.replace(/(\\_\\w)/g",{"_index":411,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj[d",{"_index":417,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["object",{"_index":132,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["object.keys(params).map(key",{"_index":441,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["onc",{"_index":507,"title":{},"body":{"index.html":{}}}],["option",{"_index":127,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"interfaces/Page.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["order",{"_index":204,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["other",{"_index":101,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["out",{"_index":541,"title":{},"body":{"overview.html":{}}}],["overrid",{"_index":99,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["overview",{"_index":536,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":167,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["p.updatedat",{"_index":168,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["page",{"_index":35,"title":{"interfaces/Page.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagecount",{"_index":90,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageid",{"_index":83,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageimag",{"_index":48,"title":{"interfaces/PageImage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagenum",{"_index":103,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pages",{"_index":92,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pagetyp",{"_index":43,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pagin",{"_index":87,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["paginginfo",{"_index":93,"title":{"interfaces/PagingInfo.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagingmeta",{"_index":88,"title":{"interfaces/PagingMeta.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["param",{"_index":138,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{}}}],["paramet",{"_index":126,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["params).then(r",{"_index":165,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params.search",{"_index":188,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params['sort",{"_index":206,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["params[key",{"_index":443,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["pendingcount",{"_index":328,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["per",{"_index":91,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["person",{"_index":70,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pipe",{"_index":520,"title":{},"body":{"index.html":{}}}],["posit",{"_index":84,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["post",{"_index":212,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["pregen",{"_index":16,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pregnanc",{"_index":258,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["privat",{"_index":192,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["process",{"_index":301,"title":{},"body":{"classes/ApiStorage.html":{}}}],["process(updat",{"_index":307,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["promis",{"_index":133,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["promise((r",{"_index":179,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promise.resolve(item.promisegener",{"_index":362,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promisegener",{"_index":341,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["protect",{"_index":113,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["provid",{"_index":286,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":115,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["publish",{"_index":58,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["queri",{"_index":440,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["question",{"_index":68,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["queue",{"_index":322,"title":{"classes/Queue.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["queue(infin",{"_index":389,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["queueentri",{"_index":344,"title":{"classes/QueueEntry.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["rail",{"_index":147,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapicli",{"_index":121,"title":{"classes/RailsApiClient.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["railsapiclient(config.domain",{"_index":219,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapiclient.tocamelcase(json",{"_index":454,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["railsapiclient.tocamelcase(this.model",{"_index":162,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["railsapiclient.tosnakecase(param",{"_index":439,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["re",{"_index":356,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["reach",{"_index":354,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reason",{"_index":347,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej",{"_index":201,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej(new",{"_index":351,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reject",{"_index":346,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["res(storedobj.item",{"_index":180,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res(this.monthdiff(new",{"_index":202,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res.json().then(json",{"_index":452,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res.meta",{"_index":170,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["res.statu",{"_index":458,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res[camelmodel",{"_index":169,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["reset",{"_index":540,"title":{},"body":{"overview.html":{}}}],["resolv",{"_index":345,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["respondedbyid",{"_index":77,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["respons",{"_index":75,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["result",{"_index":105,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":129,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["run",{"_index":504,"title":{},"body":{"index.html":{}}}],["sample.compon",{"_index":276,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.direct",{"_index":278,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.pip",{"_index":280,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.servic",{"_index":282,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplecompon",{"_index":275,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampledirect",{"_index":277,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplepip",{"_index":279,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampleservic",{"_index":281,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["saveconsum",{"_index":506,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":29,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["sdk.model",{"_index":146,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{}}}],["sdk.models.t",{"_index":6,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["sdk.servic",{"_index":274,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sdk.service.t",{"_index":109,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk.service.ts:101",{"_index":265,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["sdk.service.ts:110",{"_index":293,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:111",{"_index":294,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:112",{"_index":297,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:113",{"_index":296,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:114",{"_index":295,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:115",{"_index":290,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:12",{"_index":249,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:13",{"_index":250,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:131",{"_index":291,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:139",{"_index":292,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:14",{"_index":248,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:25",{"_index":253,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:40",{"_index":252,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:54",{"_index":251,"title":{},"body":{"classes/AnimalModelService.html":{}}}],["sdk.service.ts:60",{"_index":263,"title":{},"body":{"classes/AnimalPageService.html":{}}}],["sdk.service.ts:67",{"_index":260,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:77",{"_index":257,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:89",{"_index":259,"title":{},"body":{"classes/AnimalMonthService.html":{}}}],["sdk.service.ts:96",{"_index":266,"title":{},"body":{"classes/AnimalQuestionService.html":{}}}],["sdkand",{"_index":509,"title":{},"body":{"index.html":{}}}],["search",{"_index":104,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["secret",{"_index":25,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["set",{"_index":302,"title":{},"body":{"classes/ApiStorage.html":{}}}],["set(key",{"_index":309,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["setaccesstoken",{"_index":381,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["setaccesstoken(token",{"_index":400,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["side",{"_index":85,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["specif",{"_index":232,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["specifi",{"_index":516,"title":{},"body":{"index.html":{}}}],["src/.../anim",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/anim",{"_index":5,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api",{"_index":298,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/index.t",{"_index":269,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["src/queue.t",{"_index":323,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["src/queue.ts:10",{"_index":336,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:11",{"_index":334,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:12",{"_index":333,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:18",{"_index":340,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:2",{"_index":370,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:3",{"_index":372,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:34",{"_index":342,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:4",{"_index":371,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:8",{"_index":338,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:9",{"_index":337,"title":{},"body":{"classes/Queue.html":{}}}],["src/rail",{"_index":373,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["start",{"_index":501,"title":{"index.html":{}},"body":{}}],["statement",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":284,"title":{},"body":{"modules/AnimalSDKModule.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["statu",{"_index":56,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["status=1,page_type=log",{"_index":189,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storag",{"_index":151,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storage.t",{"_index":299,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["storage.ts:18",{"_index":306,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:21",{"_index":310,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:25",{"_index":304,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:29",{"_index":308,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:6",{"_index":461,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:7",{"_index":463,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:8",{"_index":462,"title":{},"body":{"classes/StorageItem.html":{}}}],["storageitem",{"_index":150,"title":{"classes/StorageItem.html":{}},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["storagestatu",{"_index":149,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["storagestatus.valid",{"_index":176,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["storedobj",{"_index":173,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["storedobj.statu",{"_index":175,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["switch",{"_index":456,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["t",{"_index":94,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["tabl",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":73,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["then((valu",{"_index":363,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["then(json",{"_index":460,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["then(r",{"_index":450,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this._concurr",{"_index":349,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.length",{"_index":350,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.push",{"_index":355,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.shift",{"_index":360,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.accesstoken",{"_index":425,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.animalgen",{"_index":160,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.buildanimalurl(this.animalgen().id",{"_index":164,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.buildresource(baseapiurl",{"_index":434,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.client",{"_index":158,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.buildresource(this.client.buildurl('anim",{"_index":185,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.buildurl('anim",{"_index":234,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.callapi",{"_index":163,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.callapi(url",{"_index":235,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.domain",{"_index":238,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.queue.add",{"_index":200,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.client.setaccesstoken(json.accesstoken",{"_index":245,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.credientals.clientid",{"_index":241,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.credientals.clientsecret",{"_index":242,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.config.domain",{"_index":218,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.currentanim",{"_index":224,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.dequeu",{"_index":357,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.domain",{"_index":424,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.domain}api/${(apivers",{"_index":432,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.getall(param",{"_index":190,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.getanimal(1",{"_index":221,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.head",{"_index":449,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.isauth",{"_index":426,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.login",{"_index":220,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.maxqueu",{"_index":348,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.menuitem",{"_index":227,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.model",{"_index":159,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.month",{"_index":225,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.pag",{"_index":222,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.pendingcount",{"_index":358,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.quest",{"_index":230,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{}}}],["this.queue.add",{"_index":436,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tocamelcase(obj[d",{"_index":421,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tosnakecase(obj[d",{"_index":423,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["time",{"_index":49,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["timestamp",{"_index":98,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["titl",{"_index":38,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["tocamelcas",{"_index":382,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tocamelcase(obj",{"_index":403,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["token",{"_index":402,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecas",{"_index":383,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecase(obj",{"_index":406,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["total",{"_index":89,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["tri",{"_index":361,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["true",{"_index":369,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["ts",{"_index":528,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["typeof",{"_index":410,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["updat",{"_index":53,"title":{"interfaces/Updatable.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["updatable.id",{"_index":320,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatables.foreach(updat",{"_index":318,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatedat",{"_index":54,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["url",{"_index":65,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["urlparam",{"_index":102,"title":{"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["url}/${model}${id",{"_index":435,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["us",{"_index":30,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["user",{"_index":76,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["usevalu",{"_index":287,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["v1",{"_index":433,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["val",{"_index":442,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["valid",{"_index":313,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["valu",{"_index":137,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":490,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":60,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["videourl",{"_index":61,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["void",{"_index":247,"title":{},"body":{"classes/AnimalModelService.html":{},"injectables/AnimalSDKService.html":{},"classes/ApiStorage.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["ye",{"_index":128,"title":{},"body":{"classes/AnimalMenuItemService.html":{},"classes/AnimalModelService.html":{},"classes/AnimalMonthService.html":{},"classes/AnimalPageService.html":{},"classes/AnimalQuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["z])/).join('_').tolowercas",{"_index":419,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["zoom",{"_index":539,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Animal.html":{"url":"interfaces/Animal.html","title":"interface - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        conceivedOn\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conceivedOn\n                                    \n                                \n                                \n                                    \n                                        conceivedOn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the animal got pregenant.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Animal Identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animals name.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalApiCredentials.html":{"url":"interfaces/AnimalApiCredentials.html","title":"interface - AnimalApiCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalApiCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client identifier of oauth application.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client secret of oauth application.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalMenuItemService.html":{"url":"classes/AnimalMenuItemService.html","title":"class - AnimalMenuItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalMenuItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalModelService.html":{"url":"classes/AnimalModelService.html","title":"class - AnimalModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: RailsApiClient, model: string, animalGenerator: () => void)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    RailsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalGenerator\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalMonthService.html":{"url":"classes/AnimalMonthService.html","title":"class - AnimalMonthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalMonthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Public\n                                getAllOrdered\n                            \n                            \n                                    Private\n                                monthDiff\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        current()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Returns the current Month which the animal is in its pregnancy.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllOrdered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllOrdered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Get all months in order by month number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                The url params.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            monthDiff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        monthDiff(d1: Date, d2: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d1\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        d2\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalPageService.html":{"url":"classes/AnimalPageService.html","title":"class - AnimalPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllPublished\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllPublished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllPublished(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalQuestionService.html":{"url":"classes/AnimalQuestionService.html","title":"class - AnimalQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AnimalModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGen\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ask\n                            \n                            \n                                    Public\n                                getAllAnswered\n                            \n                            \n                                    Protected\n                                buildAnimalUrl\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGen:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ask(question: AskQuestion)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    AskQuestion\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllAnswered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            buildAnimalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildAnimalUrl(animalId: number, id?: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:40\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnimalModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in AnimalModelService:25\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalSDKModule.html":{"url":"modules/AnimalSDKModule.html","title":"module - AnimalSDKModule","body":"\n                   \n\n\n\n\n  Modules\n  AnimalSDKModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnimalSDKService, AnimalSdkConfigService } from './animal-sdk.service';\nimport { AnimalSdkConfig } from './animal-sdk.models';\n// import { SampleComponent } from './sample.component';\n// import { SampleDirective } from './sample.directive';\n// import { SamplePipe } from './sample.pipe';\n// import { SampleService } from './sample.service';\n\n// export * from './sample.component';\n// export * from './sample.directive';\n// export * from './sample.pipe';\n// export * from './sample.service';\n\nexport * from './animal-sdk.models';\nexport * from './animal-sdk.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ],\n  exports: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ]\n})\nexport class AnimalSDKModule {\n  static forRoot(config: AnimalSdkConfig): ModuleWithProviders {\n    return {\n      ngModule: AnimalSDKModule,\n      providers: [\n        AnimalSDKService,\n        {\n          provide: AnimalSdkConfigService,\n          useValue: config\n        }]\n      // providers: [SampleService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalSDKService.html":{"url":"injectables/AnimalSDKService.html","title":"injectable - AnimalSDKService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimalSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                currentAnimal\n                            \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Public\n                                months\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Public\n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAnimal\n                            \n                            \n                                    Private\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalSdkConfig)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AnimalSdkConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAnimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAnimal(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Get a specific Animal.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The animal identifier\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentAnimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentAnimal:     Animal\n\n                    \n                \n                    \n                        \n                            Type :     Animal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     AnimalMenuItemService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalMenuItemService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            months\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        months:     AnimalMonthService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalMonthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     AnimalPageService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalPageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     AnimalQuestionService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalQuestionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:115\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus, StorageItem } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport class AnimalModelService {\n    client: RailsApiClient;\n    model: string;\n    animalGen: () => Animal;\n    constructor(client: RailsApiClient, model: string, animalGenerator: () => Animal) {\n        this.client = client;\n        this.model = model;\n        this.animalGen = animalGenerator;\n    }\n\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        const camelModel = RailsApiClient.toCamelCase(this.model);\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'GET',\n            params).then(res => {\n                ApiStorage.process(res[camelModel].map(p => {\n                    return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                }));\n                return { items: res[camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number): Promise {\n        const key = ApiStorage.getKey(this.model, id);\n        const storedObj = ApiStorage.get(key);\n        if (storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => { return res(storedObj.item); });\n        } else {\n            console.log(`Fetching ${this.model} with id: ${id}`);\n            return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id, id), 'GET', null, (json: Page) => {\n                ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n            });\n        }\n    }\n\n    protected buildAnimalUrl(animalId: number, id?: number): string {\n        return this.client.buildResource(this.client.buildUrl('animals', animalId), this.model, id);\n    }\n}\n\nexport class AnimalPageService extends AnimalModelService {\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalMonthService extends AnimalModelService {\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res, rej) => {\n                res(this.monthDiff(new Date(this.animalGen().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params['sort'] = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class AnimalQuestionService extends AnimalModelService {\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(() => this.buildAnimalUrl(this.animalGen().id), 'POST', { question });\n    }\n}\n\nexport class AnimalMenuItemService extends AnimalModelService { }\n\n@Injectable()\nexport class AnimalSDKService {\n    client: RailsApiClient;\n    currentAnimal: Animal;\n    public pages: AnimalPageService;\n    public months: AnimalMonthService;\n    public menuItems: AnimalMenuItemService;\n    public questions: AnimalQuestionService;\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        this.login();\n        this.getAnimal(1);\n        this.pages = new AnimalPageService(this.client, 'pages', () => this.currentAnimal);\n        this.months = new AnimalMonthService(this.client, 'months', () => this.currentAnimal);\n        this.menuItems = new AnimalMenuItemService(this.client, 'menu_items', () => this.currentAnimal);\n        this.questions = new AnimalQuestionService(this.client, 'questions', () => this.currentAnimal);\n    }\n\n    /**\n     * Get a specific Animal.\n     * @param id The animal identifier\n     */\n    public getAnimal(id: number): Promise {\n        const url = this.client.buildUrl('animals', id);\n        return this.client.callApi(url, 'GET', null, json => {\n            this.currentAnimal = json;\n            console.log('Current Animal:', this.currentAnimal);\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalSdkConfig.html":{"url":"interfaces/AnimalSdkConfig.html","title":"interface - AnimalSdkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalSdkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        credientals\n                                \n                                \n                                        domain\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credientals\n                                    \n                                \n                                \n                                    \n                                        credientals:     AnimalApiCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnimalApiCredentials\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client credientals used when connecting to API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The domain that the SDK should use in API calls.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiStorage.html":{"url":"classes/ApiStorage.html","title":"class - ApiStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                getKey\n                            \n                            \n                                    Static\n                                process\n                            \n                            \n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StorageItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKey(model: string, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(updatables: [Updatable])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updatables\n                                                        \n                                                                    [Updatable]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, object: StorageItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        object\n                                                        \n                                                                    StorageItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AskQuestion.html":{"url":"interfaces/AskQuestion.html","title":"interface - AskQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AskQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicMonth.html":{"url":"interfaces/BasicMonth.html","title":"interface - BasicMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        number\n                                \n                                \n                                        page\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The month identifier \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The month number \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     BasicPage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BasicPage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Basic Page Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last time either the month or the page was updated. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicPage.html":{"url":"interfaces/BasicPage.html","title":"interface - BasicPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        imageUrls\n                                \n                                \n                                        pageType\n                                \n                                \n                                        title\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time this page was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                    \n                                \n                                \n                                    \n                                        imageUrls:     [PageImage]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [PageImage]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of images associated with this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of page.\n\"log\", \"month\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last time this page was updated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        pageId\n                                \n                                \n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MenuItem Identifier \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageId\n                                    \n                                \n                                \n                                    \n                                        pageId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page identifier this menu item should go to. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position on the menu item in the side bar. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicMonth\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalId\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalId\n                                    \n                                \n                                \n                                    \n                                        animalId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animal identifier this Month is for. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the month (This will override the page title) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicPage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        moreInfoUrl\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        videoUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moreInfoUrl\n                                    \n                                \n                                \n                                    \n                                        moreInfoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to more information about this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page status.\n\"draft\", \"published\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoUrl\n                                    \n                                \n                                \n                                    \n                                        videoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to a video associated with this page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageImage.html":{"url":"interfaces/PageImage.html","title":"interface - PageImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image's filename.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to the image.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingInfo.html":{"url":"interfaces/PagingInfo.html","title":"interface - PagingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        meta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     [T]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [T]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items in the page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                    \n                                \n                                \n                                    \n                                        meta:     PagingMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PagingMeta\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Paging information used when paginating.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingMeta.html":{"url":"interfaces/PagingMeta.html","title":"interface - PagingMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n            \n                Description\n            \n            \n                Models used for pagination. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageCount\n                                \n                                \n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of total pages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of items per page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        respondedById\n                                \n                                \n                                        response\n                                \n                                \n                                        status\n                                \n                                \n                                        text\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was created. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Question Identifier \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        respondedById\n                                    \n                                \n                                \n                                    \n                                        respondedById:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user id of the person who responsed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response to the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the question\n\"asked\", \"answered\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was updated \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _concurrency\n                            \n                            \n                                _idCount\n                            \n                            \n                                _queue\n                            \n                            \n                                maxQueue\n                            \n                            \n                                pendingCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Private\n                                dequeue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxQueue: number, concurrency?: number)\n                    \n                \n                        \n                            \n                                Defined in src/queue.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxQueue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        concurrency\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _concurrency\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _concurrency:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _idCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _idCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxQueue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pendingCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pendingCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add(promiseGenerator: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseGenerator\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dequeue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dequeue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n        return new Promise((res, rej) => {\n            if (this._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            this._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            this.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            this.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    this.pendingCount--;\n                    this.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    this.pendingCount--;\n                    this.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            this.pendingCount--;\n            this.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueueEntry.html":{"url":"classes/QueueEntry.html","title":"class - QueueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promiseGenerator\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promiseGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseGenerator:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reject:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resolve:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n        return new Promise((res, rej) => {\n            if (this._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            this._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            this.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            this.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    this.pendingCount--;\n                    this.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    this.pendingCount--;\n                    this.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            this.pendingCount--;\n            this.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RailsApiClient.html":{"url":"classes/RailsApiClient.html","title":"class - RailsApiClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RailsApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rails-api-client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessToken\n                            \n                            \n                                    Public\n                                domain\n                            \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildResource\n                            \n                            \n                                    Public\n                                buildUrl\n                            \n                            \n                                    Public\n                                callApi\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                            \n                                    Static\n                                toCamelCase\n                            \n                            \n                                    Static\n                                toSnakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(domain: string)\n                    \n                \n                        \n                            \n                                Defined in src/rails-api-client.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domain\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        domain:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuth:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Queue(Infinity)\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildResource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildResource(url: string, model: string, id: number | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildUrl(model: string, id: number | null, apiVersion?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiVersion\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            callApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callApi(url: string | , method: string, params: any, then: (value: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string | \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        then\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                (value?: any) => { }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        headers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HeadersInit\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toCamelCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toCamelCase(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toSnakeCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toSnakeCase(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Queue } from './queue';\n\nexport class RailsApiClient {\n    public domain: string;\n    public isAuth = false;\n    private accessToken: string;\n    public queue = new Queue(Infinity);\n\n    public static toCamelCase(obj: any): any {\n        let newObj = {};\n        if (typeof obj === 'string') {\n            return obj.replace(/(\\_\\w)/g, (k) => {\n                return k[1].toUpperCase();\n            });\n        }\n        if (Array.isArray(obj)) {\n            newObj = [];\n        }\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toCamelCase(obj[d]);\n                }\n                newObj[d.replace(/(\\_\\w)/g, (k) => {\n                    return k[1].toUpperCase();\n                })] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    public static toSnakeCase(obj: {}): any {\n        const newObj = {};\n\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toSnakeCase(obj[d]);\n                }\n                newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    constructor(domain: string) {\n        this.domain = domain;\n    }\n\n    public setAccessToken(token: string) {\n        this.accessToken = token;\n        this.isAuth = true;\n    }\n\n    private headers(): HeadersInit {\n        const headers: { [key: string]: string } = {\n            'Content-Type': 'application/json'\n        };\n\n        if (this.isAuth) {\n            headers['Authorization'] = `Bearer ${this.accessToken}`;\n        }\n\n        return headers;\n    }\n\n    public buildUrl(model: string, id: number | null, apiVersion?: string): string {\n        const baseApiUrl = `${this.domain}api/${(apiVersion || 'v1')}`;\n        return this.buildResource(baseApiUrl, model, id);\n    }\n\n    public buildResource(url: string, model: string, id: number | null = null): string {\n        return `${url}/${model}${id != null ? ('/' + id) : ''}`;\n    }\n\n    public callApi(url: string | (() => string),\n        method: string,\n        params: any = null,\n        then: (value?: any) => void = (value?: any) => { }): Promise {\n\n        return this.queue.add(() => {\n            let jsonBody: string = null;\n            let fullUrl = url;\n            if (typeof fullUrl === 'function') {\n                fullUrl = fullUrl();\n            }\n            if (method === 'GET') {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n\n                    const query = Object.keys(params).map(key => {\n                        const val = params[key];\n                        if (!val) {\n                            return null;\n                        }\n                        return `${key}=${params[key]}`;\n                    }).filter(val => val != null).join('&');\n                    fullUrl += '?' + query;\n                }\n            } else {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n                    jsonBody = JSON.stringify(params);\n                }\n            }\n            return fetch(fullUrl, {\n                body: jsonBody,\n                headers: this.headers(),\n                method,\n            }).then(res => {\n                console.log(`${fullUrl} Response:`, res);\n                return res.json().then(json => {\n                    const camelJson = RailsApiClient.toCamelCase(json);\n                    camelJson._res = res;\n                    switch (true) {\n                        case (res.status >= 200 && res.status  {\n                then(json);\n                return json;\n            });\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageItem.html":{"url":"classes/StorageItem.html","title":"class - StorageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     StorageStatus\n\n                    \n                \n                    \n                        \n                            Type :     StorageStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatedAt:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Updatable.html":{"url":"interfaces/Updatable.html","title":"interface - Updatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Updatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        model\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlParams.html":{"url":"interfaces/UrlParams.html","title":"interface - UrlParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pageNum\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageNum\n                                    \n                                \n                                \n                                    \n                                        pageNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                    \n                                \n                                \n                                    \n                                        search:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Animal {\n    /**\n     * Animal Identifier\n     */\n    id: number;\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage {\n    /**\n     * The page identifier.\n     */\n    id: number;\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage {\n    /**\n     * Image identifier.\n     */\n    id: number;\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question {\n    /** Question Identifier */\n    id: number;\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem {\n    /** MenuItem Identifier */\n    id: number;\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth {\n    /** The month identifier */\n    id: number;\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Animal\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalApiCredentials\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalSdkConfig\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AskQuestion\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicMonth\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicPage\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Month\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Page\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PageImage\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingInfo\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingMeta\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Question\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                UrlParams\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalMenuItemService\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalModelService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalMonthService\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalPageService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalQuestionService\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                injectable\n            \n            \n                AnimalSDKService\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                variable\n            \n            \n                AnimalSdkConfigService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                ApiStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                StorageItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                interface\n            \n            \n                Updatable\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                Queue\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                QueueEntry\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/rails-api-client.ts\n            \n            \n                class\n            \n            \n                RailsApiClient\n            \n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StorageStatus   (src/.../api-storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api-storage.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageStatus\n                    \n                \n                        \n                            \n                                 invalid\n                            \n                        \n                        \n                            \n                                 valid\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nanimal-sdk\nInstallation\nTo install this library, run:\n$ npm install animal-sdk --saveConsuming your library\nOnce you have published your library to npm, you can import your library in any Angular application by running:\n$ npm install animal-sdkand then from your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { AnimalSDKModule } from 'animal-sdk';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    AnimalSDKModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Once your library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © Nicholas Mata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalSDKModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalSdkConfigService   (src/.../animal-sdk.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/animal-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimalSdkConfigService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimalSdkConfigService:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimalSdkConfig')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
